<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MateModule</name>
    </assembly>
    <members>
        <member name="F:MateForms.BaseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.BaseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.BaseForm.SpreadList">
            <summary>
            ComMate: 폼에 포함된 Spread리스트
            </summary>
        </member>
        <member name="F:MateForms.BaseForm.TabList">
            <summary>
            ComMate: 폼에 포함된 Tab컨트롤 리스트
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.BaseForm_Shown(System.Object,System.EventArgs)">
            <summary>
            ComMate: 폼이 처음 표시 될 때 발생
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.SetControl(System.Windows.Forms.Control)">
            <summary>
            ComMate: 초기 로딩 시 컨트롤에 대한 설정
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.ConvertTreeNode(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            ComMate: 초기 로딩 시 컨트롤에 대한 설정
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Clear">
            <summary>
            ComMate: 폼 전체 클리어
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Clear(System.Windows.Forms.Control)">
            <summary>
            ComMate: 폼의 특정 컨트롤 클리어
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Spread_ClipboardPasted(MateControls.CmSpread,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            ComMate: Spread 붙여넣기 수행 시
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Spread_ClipboardCut(MateControls.CmSpread,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            ComMate: Spread 자르기 수행 시
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Spread_SelectChecked(MateControls.CmSpread,System.Int32)">
            <summary>
            ComMate: Spread 선택 및 체크박스 체크 시
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Spread_UserContextMenu(MateControls.CmSpread,System.String,System.Object[])">
            <summary>
            ComMate: Spread 사용자 오른쪽 마우스 정의
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Spread_OnLoad">
            <summary>
            ComMate: Spread 로드 시 기본 설정
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.Control_OnLoad">
            <summary>
            ComMate: 컨트롤 로드 시 기본 설정
            </summary>
        </member>
        <member name="M:MateForms.BaseForm.BaseForm_Resize(System.Object,System.EventArgs)">
            <summary>
            ComMate: TabPage 리사이즈가 잘 안 되는 문제 해결
            </summary>
        </member>
        <member name="P:MateForms.BaseForm.NameSpace">
            <summary>
            ComMate: 네임스페이스 얻기
            </summary>
        </member>
        <member name="P:MateForms.BaseForm.FullName">
            <summary>
            ComMate: 네임스페이스를 포함한 전체 경로 얻기
            </summary>
        </member>
        <member name="F:MateForms.ShowData.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.ShowData.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.ShowData.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MateForms.MdiChild">
            <summary>
            ComMate: 기본 상속 폼 ( 대부분 폼에서 이 폼을 상속해서 사용할 것 )
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.MenuItem">
            <summary>
            ComMate: 드랍다운 메뉴에서 현재 폼에 대한 체크표시를 위한 변수
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.FormAuthority">
            <summary>
            ComMate: 페이지 권한 정보
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.FormBtnSet">
            <summary>
            ComMate: 페이지 버튼 설정 정보
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.ActiveSpread">
            <summary>
            ComMate: 현재 ActiveSpread
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.PrintSpread">
            <summary>
            ComMate: 출력할 기본 Spread
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.ExportSpread">
            <summary>
            ComMate: 외부 파일로 내보낼 Spread
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.#ctor">
            <summary>
            ComMate: 생성자
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.MdiChild_Shown(System.Object,System.EventArgs)">
            <summary>
            ComMate: 폼이 처음 표시될때 발생
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.MdiChild_Enter(System.Object,System.EventArgs)">
            <summary>
            ComMate: 폼의 특정 컨트롤로 선택되어 들어 설 때...
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            ComMate: 마우스 클릭 이벤트 오버라이딩
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.ShowContextMenu(System.Windows.Forms.MouseEventArgs)">
            <summary>
            ComMate: 개발자용 메뉴 띄우기
            </summary>
            <param name="e">마우스 이벤트</param>
        </member>
        <member name="M:MateForms.MdiChild.ApplyControlValues">
            <summary>
            ComMate: 조회,추가,저장,삭제시 현재 수정중인 컨트롤의 값을 적용하도록 함
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_Search(System.Object,System.EventArgs)">
            <summary>
            ComMate: MDI 부모창의 조회 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_OverrideSizeTester(System.Object,System.EventArgs)">
            <summary>
            ComMate: 빈 이벤트 핸들러 사이즈 획득용 함수 (기능 없음)
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_Save(System.Object,System.EventArgs)">
            <summary>
            ComMate: MDI 부모창의 저장 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_Print(System.Object,System.EventArgs)">
            <summary>
            ComMate: 출력 전 이벤트
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_Preview(System.Object,System.EventArgs)">
            <summary>
            ComMate: 출력 전 이벤트
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_Add(System.Object,System.EventArgs)">
            <summary>
            ComMate: MDI 부모창의 추가 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_Delete(System.Object,System.EventArgs)">
            <summary>
            ComMate: MDI 부모창의 삭제 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_Cancel(System.Object,System.EventArgs)">
            <summary>
            ComMate: MDI 부모창의 취소 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_Export(System.Object,System.EventArgs)">
            <summary>
            ComMate: Spread 엑셀 저장 시 발생
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.CmEvent_FactGB(System.Object,System.EventArgs)">
            <summary>
            ComMate: 사업장 병경 시 발생 (콤보박스)
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.Spread_ClipboardPasted(MateControls.CmSpread,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            ComMate: Spread 붙여넣기 수행 시
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.Spread_ClipboardCut(MateControls.CmSpread,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            ComMate: Spread 자르기 수행 시
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.Spread_SelectChecked(MateControls.CmSpread,System.Int32)">
            <summary>
            ComMate: Spread 선택 및 체크박스 체크 시
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.Spread_UserContextMenu(MateControls.CmSpread,System.String,System.Object[])">
            <summary>
            ComMate: Spread 사용자 오른쪽 마우스 정의
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.Spread_OnLoad">
            <summary>
            ComMate: Spread 로드 시 기본 설정
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.Control_OnLoad">
            <summary>
            ComMate: 컨트롤 로드 시 기본 설정
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.SetStateBar(System.String)">
            <summary>
            ComMate: 상태바 설정
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.SetStateBar(System.String,System.Object[])">
            <summary>
            ComMate: 상태바 설정
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.QueryResult">
            <summary>
            ComMate: 쿼리 결과 상태를 저장하는 변수 
            ( MainPjt 의 timer 에서 호출 및 상태 설정 )
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.MdiTabPage">
            <summary>
            이 폼과 연결된 탭을 기록하기 위한 변수
            </summary>
        </member>
        <member name="F:MateForms.MdiChild.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.MdiChild.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.MdiChild.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MateForms.MdiChild.FactGB">
            <summary>
            ComMate: 사업장 코드
            </summary>
        </member>
        <member name="F:MateForms.NoticeMainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.NoticeMainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.NoticeMainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MateForms.LoginForm.LoadUserID">
            <summary>
            최근 로그인 한 사용자 ID를 ComputerInfo.xml 파일에서 읽어옴
            이때 아이디 저장 체크 박스가 체크된 상태여야한다.
            </summary>
        </member>
        <member name="M:MateForms.LoginForm.SaveUserID(System.String)">
            <summary>
            사용자 ID를 ComputerInfo.xml 파일에 저장
            </summary>
            <param name="userID">저장할 사용자 ID</param>
        </member>
        <member name="F:MateForms.LoginForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.LoginForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.LoginForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MateForms.LoginForm.ShowBackGroundImage">
            <summary>
            ComMate: 배경이미지 보이기/숨기기
            </summary>
        </member>
        <member name="F:MateForms.KeyDateFrom.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.KeyDateFrom.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.KeyDateFrom.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MateControls.CmTabControl.#ctor">
            <summary>
            ComMate: 생성자
            </summary>
        </member>
        <member name="M:MateControls.CmTabControl.ExtendToRight">
            <summary>
            ComMate: 탭컨트롤 오른쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmTabControl.ExtendToBottom">
            <summary>
            ComMate: 탭컨트롤 아래쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmTabControl.ExtendToRightBottom">
            <summary>
            ComMate: 탭컨트롤 오른쪽 아래쪽으로 확장
            </summary>
        </member>
        <member name="F:MateControls.CmTabControl.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmTabControl.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmTabControl.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:MateControls.CmSpread.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmSpread.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._UseNewFilter">
            <summary>
            ComMate: 신형 필터 사용여부
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._defaultSheetRowCount">
            <summary>
            ComMate: 디폴트 RowCount
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._defaultSheetColumnCount">
            <summary>
            ComMate: 디폴트 ColumnCount
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._isAddedSheet">
            <summary>
            ComMate: 시트가 추가 되었는지 확인
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._curSheetIndex">
            <summary>
            ComMate: 현재 시트 Index
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._disableContextMenu">
            <summary>
            ComMate: 개발자 직접 MouseDown 이벤트 발생시 공용 ContextMenu 무효화하기 위한 목적
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._UseArrowKeyForNavigate">
            <summary>
            ComMate: 입력중 화살표 키를 입력하면 다른 셀로 이동하게 할 것인지 여부
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._userContextMenu">
            <summary>
            ComMate: 사용자 ContextMenu 리스트
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._sheetReadOnly">
            <summary>
            ComMate: 시트별 ReadOnly 유무
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._oldDataSource">
            <summary>
            ComMate: 시트별 Binding 한 원본 DataTable 소스
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._checkBoxColumns">
            <summary>
            ComMate: 시트별 CheckBox 컬럼 리스트
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._langColumns">
            <summary>
            ComMate: 시트별 언어변환 컬럼 리스트
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._checkFields">
            <summary>
            ComMate: 선택/해제 CheckBox 필드
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._MoreColumns">
            <summary>
            ComMate: 시트별 소계 행 리스트
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._autoColumns">
            <summary>
            ComMate: 시트별 자동 컬럼 생성 여부
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._subtotalRowList">
            <summary>
            ComMate: 시트별 소계 행 리스트
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._subtotalStartEnd">
            <summary>
            ComMate: 시트별 소계 행 시작과 끝점 리스트
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._formulaColumns">
            <summary>
            ComMate: 포뮬라 컬럼 설정
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._originalStyle">
            <summary>
            ComMate: 원본 스타일 정보
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._userStyle">
            <summary>
            ComMate: 사용자 설정 스타일 정보
            </summary>
        </member>
        <member name="F:MateControls.CmSpread.SheetContextMenu">
            <summary>
            ComMate: 시트의 코너 ContextMenu 보이기 유무
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._tempRowIndex">
            <summary>
            ComMate: 행추가, 삭제, 취소시 사용되는 임시 SheetIndex, RowIndex
            </summary>
        </member>
        <member name="F:MateControls.CmSpread.CopyCellList">
            <summary>
            ComMate: 오른쪽 마우스 복사 시 저장 내용
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.#ctor">
            <summary>
            ComMate: Spread 생성자
            </summary>
        </member>
        <member name="F:MateControls.CmSpread.PrintInfo">
            <summary>
            ComMate: 출력 정보
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.AddSheet">
            <summary>
            ComMate: 시트 추가
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.AddSheet(System.String)">
            <summary>
            ComMate: 시트 추가
            </summary>
            <param name="sheetName">시트 이름</param>
        </member>
        <member name="M:MateControls.CmSpread.ClearSheet">
            <summary>
            ComMate: 시트 추가
            </summary>
            <param name="sheetName">시트 이름</param>
        </member>
        <member name="M:MateControls.CmSpread.Border(System.Int32,System.Enum,System.Int32,System.Enum)">
            <summary>
            ComMate: 셀테두리 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ShowRedLine(System.Boolean)">
            <summary>
            ComMate: 현재행을 나타내는 빨간줄 보이기/숨기기
            </summary>
            <param name="isShow">현재행을 나타내는 빨간줄 보여주기 여부</param>
        </member>
        <member name="M:MateControls.CmSpread.ShowGroupHeader(FarPoint.Win.Spread.SheetView)">
            <summary>
            ComMate: 그룹 헤더 보이기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.HiddenGroupHeader(FarPoint.Win.Spread.SheetView)">
            <summary>
            ComMate: 그룹헤어 숨기기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.AddColumn(System.Enum,System.Int32,System.String[])">
            <summary>
            ComMate: 헤더 정보 설정 ( 데이터필드, 너비, 텍스트 설정 )
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetSortColumns(System.Enum[])">
            <summary>
            ComMate: 지정 컬럼에 헤더에 소팅 기능 추가
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetFilterColumns(System.Enum[])">
            <summary>
            ComMate: 지정 컬럼 헤더에 필터 기능 추가
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ChangeColor(System.Boolean)">
            <summary>
            ComMate: 행 수정및 추가시 배경색 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetHiddenColumns(System.Enum[])">
            <summary>
            ComMate: 지정 컬럼들을 숨기기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetFormulaColumns(MateClass.CmEnums.FormulaType,System.String,System.String[])">
            <summary>
            ComMate: 지정 컬럼들을 숨기기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetLockedColumns(System.Enum[])">
            <summary>
            ComMate: 지정 컬럼들을 읽기전용인 Locked 컬럼으로 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetLockedCell(System.Int32,System.Enum[])">
            <summary>
            ComMate: 지정 셀을 읽기 전용으로 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.UnLockedColumns(System.Enum[])">
            <summary>
            ComMate: 읽기 전용 컬럼을 해제
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.UnLockedCell(System.Int32,System.Enum[])">
            <summary>
            ComMate: 읽기 전용 셀을 해제
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsLockedCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 읽기 전용 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsDateTimeCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 데이터타임 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsProgressCell(System.Int32,System.Enum)">
            <summary>
            ComMate: Progress 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsSliderBarCell(System.Int32,System.Enum)">
            <summary>
            ComMate: Slider 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsComboBoxCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 데이터타임 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsNumberCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 데이터타임 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsButtonCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 버튼 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsAutoColumn(System.Enum)">
            <summary>
            ComMate: AutoColumn 여부
            </summary>
            <param name="dataField"></param>
            <returns></returns>
        </member>
        <member name="M:MateControls.CmSpread.IsCheckBoxCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 체크박스 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.IsTextBoxCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 데이터타임 셀 여부
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetMultilineCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 지정 셀들을 Multiline 으로 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetWordWrapCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 지정 셀들을 Multiline 으로 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTextAlignColumns(MateClass.CmEnums.TextAlignType,System.Enum[])">
            <summary>
            ComMate: 지정 컬럼들의 정렬 방식 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTextAlignCell(MateClass.CmEnums.TextAlignType,System.Int32,System.Enum[])">
            <summary>
            ComMate: 지정 셀의 정렬 방식 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetColumnType(MateClass.CmEnums.ColumnType,System.Enum[])">
            <summary>
            ComMate: 컬럼 유형에 따라 글자 색상 지정하기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetAutoColumns(System.Enum[])">
            <summary>
            ComMate: DataSource 내용에 다른 자동 컬럼 숨김
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetAutoColumns">
            <summary>
            ComMate: 자동 숨김 컬럼 목록 가져오기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeTextBox(System.Enum,System.Int32)">
            <summary>
            ComMate: 지정 컬럼에 Text 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeNumber(System.Enum)">
            <summary>
            ComMate: 지정 컬럼에 숫자 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypePercent(System.Enum)">
            <summary>
            ComMate: 지정 컬럼에 숫자 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeComboBox(System.Enum,System.Data.DataTable)">
            <summary>
            ComMate: 지정 컬럼에 콤보박스 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeCheckBox(System.Enum,System.String)">
            <summary>
            ComMate: 지정 컬럼에 체크박스 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeButton(System.Enum,System.String)">
            <summary>
            ComMate: 지정 컬럼에 버튼 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeBarCode(System.Enum,MateClass.CmEnums.BarCodeType,System.Boolean)">
            <summary>
            ComMate: 지정 컬럼에 버튼 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeProgress(System.Enum)">
            <summary>
            ComMate: 지정 컬럼에 버튼 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeSlider(System.Enum)">
            <summary>
            ComMate: 지정 컬럼에 버튼 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeMask(System.Enum,System.String)">
            <summary>
            ComMate: 지정 컬럼에 버튼 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypePassword(System.Enum)">
            <summary>
            ComMate: 지정 컬럼에 버튼 타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTypeDateTime(System.Enum,MateClass.CmEnums.DateTimeType)">
            <summary>
            ComMate: 지정 컬럼에 데이터타입 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetDataTable(System.Data.DataTable)">
            <summary>
            ComMate: Spread 에 지정된 DataSet 뿌리기
            기본으로 첫번째 Sheet 에 현 스타일 유지하며 값만 뿌린다.
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetDataTable(System.Data.DataTable,System.Int32)">
            <summary>
            ComMate: Spread 에 지정된 DataSet 뿌리기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetDataTable">
            <summary>
            ComMate: Spread 의 ActiveSheet 데이터를 DataTable 로 받기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetDataTable(System.Int32)">
            <summary>
            ComMate: Spread 데이터를 DataTable 으로 받기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.DisableContextMenu">
            <summary>
            ComMate: 공용 마우스 오른쪽 ContextMenu 임시 무효화
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.OnChange(FarPoint.Win.Spread.ChangeEventArgs)">
            <summary>
            ComMate: 셀값 변경 시 발생하는 이벤트
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.AddRow">
            <summary>
            ComMate: 그리드 마지막에 지정 갯수만큼 행추가
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.InsertRow(System.Int32)">
            <summary>
            ComMate: 현재 행 위치에 행 삽입
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.DeleteRow">
            <summary>
            ComMate: 선택된 행삭제
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.CancelRow">
            <summary>
            ComMate: 선택된 행 취소 ( 상태 리셋 )
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.CommitRow">
            <summary>
            ComMate: 데이터 베이스에 Commit 된 행 상태 리셋
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.InitData">
            <summary>
            ComMate: 스프레드 원본 DataSet 으로 초기화
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.InitData(System.Int32)">
            <summary>
            ComMate: 스프레드 원본 DataSet 으로 초기화
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.Export">
            <summary>
            ComMate: 스프레드 초기화 이벤트
            </summary>
            <summary>
            ComMate: 내보내기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.Preview">
            <summary>
            ComMate: Preview
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.Print">
            <summary>
            ComMate: Print
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.Clear">
            <summary>
            ComMate: 데이터 지우기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.Clear(System.Int32)">
            <summary>
            ComMate: 데이터 지우기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetRowState(System.Int32)">
            <summary>
            ComMate: 행 상태 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetRowState(System.Int32,System.Int32)">
            <summary>
            ComMate: 행 상태 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetRowState(System.Int32,MateClass.CmEnums.RowState)">
            <summary>
            ComMate: 행 상태 정하기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetRowState(System.Int32,System.Int32,MateClass.CmEnums.RowState)">
            <summary>
            ComMate: 행 상태 정하기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetColumn(System.Enum)">
            <summary>
            ComMate: DataField 문자열에 해당하는 Column 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetCell(System.Int32,System.Enum)">
            <summary>
            ComMate: DataField 문자열에 해당하는 셀 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetColumnIndex(System.Enum)">
            <summary>
            ComMate: DataField 에 해당하는 Column Index 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetDateText(System.Enum,System.String)">
            <summary>
            ComMate: 지정 데이터 필드의 텍스트 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetText(System.Enum)">
            <summary>
            ComMate: 지정 데이터 필드의 텍스트 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetInt(System.Enum)">
            <summary>
            ComMate: 지정 데이터 필드의 값 숫자로 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetDecimal(System.Enum)">
            <summary>
            ComMate: 지정 데이터 필드의 값 숫자로 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetDateTime(System.Enum)">
            <summary>
            ComMate: 지정 데이터 필드의 값 날짜형식으로 변환
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetValue(System.Enum)">
            <summary>
            ComMate: 지정 데이터 필드의 값 얻기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetSubtotalRowInfo(System.Int32)">
            <summary>
            ComMate: 지정 행으로 포커스 이동
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SelectColumn(System.String)">
            <summary>
            ComMate: 지정 컬럼으로 포커스 이동
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SelectRow(System.Int32)">
            <summary>
            ComMate: 지정 행으로 포커스 이동
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SelectCell(System.Int32,System.Enum)">
            <summary>
            ComMate: 지정 셀로 포커스 이동
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetCheckField(System.Enum)">
            <summary>
            ComMate: 삭제를 위한 체크박스의 DataField 설정 ( 마우스 오른쪽 선택 메뉴를 위함 )
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetText(System.Enum,System.String)">
            <summary>
            ComMate: 지정 데이터 필드에 텍스트 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetValue(System.Enum,System.Object)">
            <summary>
            ComMate: 지정 데이터 필드에 값 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetBackColor(MateClass.CmEnums.CellColorType,System.Enum)">
            <summary>
            ComMate: 스프레드 배경색 변경
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetLogColumns(System.Int32,MateClass.CmEnums.RowState)">
            <summary>
            ComMate: FDATE, FUSER, FFORM, LDATE, LUSER, LFORM 자동 설정 행추가/삭제/수정 시 자동 호출
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.OnEnter(System.EventArgs)">
            <summary>
            ComMate: Spread 활성화 될때 발생하는 이벤트
            Spread 가 활성화될 때마다 폼의 ActiveCmSpread 를 자신으로 변경
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.OnLeave(System.EventArgs)">
            <summary>
            ComMate: Spread 를 떠날때 발생하는 이벤트
            Spread 가 비활성화될 때마다 폼의 ActiveSpread 를 NULL로 변경
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.OnDialogKey(FarPoint.Win.Spread.DialogKeyEventArgs)">
            <summary>
            ComMate: F3 검색 기능
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            ComMate: Ctrl + F 검색 기능
            </summary>
        </member>
        <member name="F:MateControls.CmSpread.__ShowStyleMenu">
            <summary>
            ComMate: 셀클릭 이벤트
            </summary>
        </member>
        <member name="F:MateControls.CmSpread._CellDoubleClickHandlerCount">
            <summary>
            ComMate: 셀 더블클릭 이벤트
            </summary>
            
        </member>
        <member name="M:MateControls.CmSpread.DisableSetStyle">
            <summary>
            ComMate: 스프레드에서 스타일 설정 메뉴항목 감추기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.EnableSetStyle">
            <summary>
            ComMate: 스프레드에서 스타일 설정 메뉴항목 보이기
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.cornerContextMenu_Closed(System.Object,System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            ComMate: 시트 코너 ContextMenu 닫힐 때 전체 선택 영역 클리어
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MateControls.CmSpread.OnEnterCell(FarPoint.Win.Spread.EnterCellEventArgs)">
            <summary>
            ComMate: 선택 셀 빨간 줄로 표시
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.AddUserContextMenu(System.String,System.String,System.Object[])">
            <summary>
            ComMate: 오른쪽 마우스 메뉴 추가 ( Spread_UserContextMenu Override 해서 제어 가능 )
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            ComMate: 마우스 클릭 이벤트 오버라이딩
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ExtendToRight">
            <summary>
            ComMate: 스프레드 오른쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ExtendToBottom">
            <summary>
            ComMate: 스프레드 아래쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ExtendToRightBottom">
            <summary>
            ComMate: 스프레드 오른쪽 아래쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetSubtotal(System.Enum,System.Enum[])">
            <summary>
            ComMate: 소계 설정
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.DeleteSubtotal(System.Int32,System.Enum)">
            <summary>
            ComMate: 소계 정보 삭제
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ClearSubtotal">
            <summary>
            ComMate: 소계 정보 삭제
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTotalPosition(MateClass.CmEnums.SubtotalPosition)">
            <summary>
            ComMate: 총계 표시 위치 설정 ( 위 혹은 아래 )
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetSubtotalType(MateClass.CmEnums.FormulaType,System.Enum[])">
            <summary>
            ComMate: 소계 항목 유형 설정 ( 최대, 최소, 평균, 합계 )
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetTotalCaption(System.String,System.String)">
            <summary>
            ComMate: 총계 캡션 표시
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetSubtotalCaption(System.Enum,System.Enum,System.String)">
            <summary>
            ComMate: 소계 캡션 표시
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetSubtotalRow(System.Int32)">
            <summary>
            ComMate: 소계 정보를 Row.Tag 에 설정 ( 다중 소계를 위해 Hashtable 배열로 설정 )
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.AddSubtotalRow(System.Int32)">
            <summary>
            ComMate: SetSubtotalRow 에서 설정한 Row.Tag 를 기반으로 실제 소계 행 추가
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ShowColumnFilter(System.Int32)">
            <summary>
            ComMate: 필터보이기 (컬럼 번호로)
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ShowColumnFilter(System.Int32,System.Int32,System.Int32)">
            <summary>
            ComMate: 필터보이기 (x,y 좌표로)
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.ColumnFilter_OnFilterChanged(System.Object,System.Int32,System.Windows.Forms.CheckedListBox.CheckedItemCollection,System.Boolean)">
            <summary>
            ComMate: 필터 선택 팝업창에서 확인 버튼을 누른 경우
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.FindCustomRowFilterItem(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            ComMate: 필터목록에서 CustomRowFilterItem인 필터를 찾아옴
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.GetFilteringSet(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            ComMate: 필터링 목록을 가져오는 함수. 못 찾으면 null을 리턴
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.SetupFilterItem(System.Int32)">
            <summary>
            ComMate: 필터 목록 생성
            </summary>
        </member>
        <member name="M:MateControls.CmSpread.HideColumnFilter">
            <summary>
            ComMate: 필터 숨기기
            </summary>
        </member>
        <member name="P:MateControls.CmSpread.SheetSelectionUnits">
            <summary>
            ComMate: 시트의 셀 선택 유형
            </summary>
        </member>
        <member name="P:MateControls.CmSpread.SheetReadOnly">
            <summary>
            ComMate: 읽기 전용 모드 설정
            </summary>
        </member>
        <member name="P:MateControls.CmSpread.SheetGroupHeader">
            <summary>
            ComMate: 그룹핑을 통한 다중 소팅 기능 지원 여부
            </summary>
        </member>
        <member name="P:MateControls.CmSpread.AlternatingColor">
            <summary>
            ComMate: 행에 표시되는 색 설정
            </summary>
        </member>
        <member name="P:MateControls.CmSpread.RowCount">
            <summary>
            ComMate: 현재 시트의 행카운터 가져오기
            </summary>
        </member>
        <member name="P:MateControls.CmSpread.UseF2AsEditing">
            <summary>
            ComMate: 스프레드에서 F2키를 눌렀을때 입력모드로 들어갈 것인가 정함
            </summary>
        </member>
        <member name="T:MateControls.CmSpread.ChildSubtotalInfo">
            <summary>
            ComMate: 시트별 소계 정보
            </summary>
        </member>
        <member name="T:MateControls.CmSpread.SubtotalRowInfo">
            <summary>
            ComMate: 소계 행 TAG
            </summary>
        </member>
        <member name="T:MateControls.CmSpread.CmSpreadSearchInfo">
            <summary>
            ComMate: 검색 기능 관련 정보
            </summary>
        </member>
        <member name="T:MateControls.CmSpread.Header">
            <summary>
            ComMate: ROWSTATE 를 추가하기 위한 ENUM 객체
            </summary>
        </member>
        <member name="F:MateControls.CmComboBox.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmComboBox.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmComboBox.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:MateControls.CmComboBox.#ctor">
            <summary>
            ComMate: 생성자
            </summary>
        </member>
        <member name="M:MateControls.CmComboBox.AddItem(System.Data.DataTable,System.String)">
            <summary>
            ComMate: DataTable 바인딩
            </summary>
        </member>
        <member name="M:MateControls.CmComboBox.AddItem(System.Data.DataTable)">
            <summary>
            ComMate: DataTable 바인딩
            </summary>
        </member>
        <member name="M:MateControls.CmComboBox.AddItem(System.String,System.String)">
            <summary>
            ComMate: items 바인딩
            </summary>
        </member>
        <member name="M:MateControls.CmComboBox.DeleteItem(System.String[])">
            <summary>
            ComMate: 아이템 삭제
            </summary>
        </member>
        <member name="M:MateControls.CmComboBox.LangConvert">
            <summary>
            ComMate: 언어변환
            </summary>
        </member>
        <member name="F:MateControls.CmComboBox._DisableEvent">
            <summary>
            ComMate: 언어 변환 시 이벤트 발생 취소
            </summary>
        </member>
        <member name="P:MateControls.CmComboBox.ConvertLang">
            <summary>
            ComMate: 언어변환 여부
            </summary>
        </member>
        <member name="T:MateClass.CmFormAuthority">
            <summary>
            ComMate: 폼 권한 Class
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.Search">
            <summary>
            조회 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.Save">
            <summary>
            저장 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.Insert">
            <summary>
            추가 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.Delete">
            <summary>
            삭제 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.Cancel">
            <summary>
            취소 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.Print">
            <summary>
            프린트 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.PreView">
            <summary>
            미리보기 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.Export">
            <summary>
            엑셀 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormAuthority.More">
            <summary>
            ComMate: 서버에서 폼 권한 가져오기
            </summary>
        </member>
        <member name="F:MateControls.CmLineDiagonal.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmLineDiagonal.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmLineDiagonal.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="P:MateControls.CmLineDiagonal.LineColor">
            <summary>
            RJSOFT: 선 색상
            </summary>
        </member>
        <member name="P:MateControls.CmLineDiagonal.LineBorder">
            <summary>
            RJSOFT: 선 굵기
            </summary>
        </member>
        <member name="P:MateControls.CmLineDiagonal.LineStart">
            <summary>
            RJSOFT: 대각선 시작점
            </summary>
        </member>
        <member name="M:DirectDB.SqlHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">an array of SqlParameters tho be added to command</param>
        </member>
        <member name="M:DirectDB.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters.
            </summary>
            <param name="commandParameters">array of SqlParameters to be assigned values</param>
            <param name="parameterValues">array of objects holding the values to be assigned</param>
        </member>
        <member name="M:DirectDB.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command.
            </summary>
            <param name="command">the SqlCommand to be prepared</param>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored prcedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],DirectDB.SqlHelper.SqlConnectionOwnership)">
            <summary>
            Create and prepare a SqlCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">indicates whether the connection parameter was provided by the caller, or created by SqlHelper</param>
            <returns>SqlDataReader containing the results of the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure using "FOR XML AUTO"</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:DirectDB.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="T:DirectDB.SqlHelper.SqlConnectionOwnership">
            <summary>
            this enum is used to indicate whether the connection was provided by the caller, or created by SqlHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:DirectDB.SqlHelper.SqlConnectionOwnership.Internal">
            <summary>Connection is owned and managed by SqlHelper</summary>
        </member>
        <member name="F:DirectDB.SqlHelper.SqlConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="T:DirectDB.SqlHelperParameterCache">
            <summary>
            SqlHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:DirectDB.SqlHelperParameterCache.DiscoverSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            resolve at run time the appropriate set of SqlParameters for a stored procedure
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">whether or not to include their return value parameter</param>
            <returns></returns>
        </member>
        <member name="M:DirectDB.SqlHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            add parameter array to the cache
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters to be cached</param>
        </member>
        <member name="M:DirectDB.SqlHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an array of SqlParamters</returns>
        </member>
        <member name="M:DirectDB.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <returns>an array of SqlParameters</returns>
        </member>
        <member name="M:DirectDB.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">a bool value indicating whether the return value parameter should be included in the results</param>
            <returns>an array of SqlParameters</returns>
        </member>
        <member name="T:MateClass.CmLangText">
            <summary>
            ComMate: 이벤트 관련 함수
            </summary>
        </member>
        <member name="M:MateClass.CmLangText.Convert(System.String,System.String)">
            <summary>
            ComMate: 단순 언어 변환
            </summary>
        </member>
        <member name="M:MateClass.CmLangText.Convert(System.String,System.String,System.String,System.Boolean)">
            <summary>
            ComMate: 컨트롤별 한국어키 수집 및 변환
            </summary>
            
        </member>
        <member name="M:MateClass.CmLangText.InsertKrKey">
            <summary>
            ComMate: 한국어 키 삽입 ( 동시 삽입 )
            </summary>
        </member>
        <member name="M:MateClass.CmLangText.UpdateFormToMaster">
            <summary>
            ComMate: 언어테이블 갱신 ( Form To Master )
            </summary>
        </member>
        <member name="M:MateClass.CmLangText.UpdateMasterToForm">
            <summary>
            ComMate: 언어테이블 갱신 ( Form To Master )
            </summary>
        </member>
        <member name="M:MateClass.CmLangText.LangFont(System.Drawing.Font)">
            <summary>
            ComMate: 언어별 폰트 구성
            </summary>
        </member>
        <member name="T:MateClass.CmLangText.LangTypeEnum">
            <summary>
            ComMate: 언어 변환 기능 사용여부
            </summary>
            
        </member>
        <member name="F:MateForms.NoticeSmallPop_Re.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.NoticeSmallPop_Re.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.NoticeSmallPop_Re.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MateClass.CmMessageBox">
            <summary>
            ComMate: 다양한 메시지 박스 정의
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.Show(System.Int32)">
            <summary>
            ComMate: 메시지 박스
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowField(System.String,System.Object[])">
            <summary>
            ComMate: 현장 메시지 박스 
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowField(System.String)">
            <summary>
            ComMate: 현장 메시지 박스 
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowFieldErr(System.String,System.Object[])">
            <summary>
            ComMate: 현장 에러메시지 박스 
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowFieldErr(System.String)">
            <summary>
            ComMate: 현장 에러메시지 박스 
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowDebug(System.String)">
            <summary>
            ComMate: 메시지를 디버그 창으로 띄우기
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowDebug(System.Exception)">
            <summary>
            ComMate: 오류 메시지를 디버그 창으로 띄우기
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowDebug(System.String,System.Exception)">
            <summary>
            ComMate: 메시지를 디버그 창으로 띄우기 ( 예외처리 변수 포함 )
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowData(System.Data.DataTable)">
            <summary>
            ComMate: 데이터 테이블 내용 출력
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowData(MateClass.SqlParams)">
            <summary>
            ComMate: 프로시저 호출 파라미터 보기
            </summary>
        </member>
        <member name="M:MateClass.CmMessageBox.ShowData(System.Data.DataSet)">
            <summary>
            ComMate: 데이터 테이블 내용 출력
            </summary>
        </member>
        <member name="F:MateForms.MyMenuForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.MyMenuForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.cmButton_AddNode_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 메뉴 추가 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.cmButton_AddChild_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 자식 메뉴 추가 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.cmButton_Delete_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 메뉴 삭제 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.cmButton_MoveTop_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 메뉴 위로 이동 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.cmButton_MoveBottom_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 메뉴 아래로 이동 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.cmTreeView_MyMenu_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            ComMate: TreeView 노드 클릭시 해당 Tag 정보 읽어 폼이름 텍스트박스 설정
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.GetDataTableFromTreeView(System.Windows.Forms.TreeNode,System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            ComMate: TreeView 로 부터 DataTable 얻기
            하위 트리노드를 하나씩 검색하는 재귀함수로 구현
            </summary>
        </member>
        <member name="M:MateForms.MyMenuForm.cmComboBox_PjtCode_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            ComMate: 프로젝트 그룹 선택된 값 변경 시 공통 조회 이벤트 호출
            </summary>
        </member>
        <member name="T:MateControls.CmCheckList">
            <summary>
            ComMate: 체크 박스 리스트 ( 아이템 동적 추가 가능 )
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.#ctor">
            <summary>
            ComMate: 생성자
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.AddItem(System.String,System.Object,System.Int32)">
            <summary>
            CheckBox 아이템 추가
            </summary>
            <param name="itemText">라벨 Text</param>
            <param name="itemValue">Value 설정</param>
            <param name="itemWidth">너비</param>
        </member>
        <member name="M:MateControls.CmCheckList.AddItem(System.String,System.Object,System.Int32,System.Boolean)">
            <summary>
            CheckBox 아이템 추가
            </summary>
            <param name="itemText">라벨 Text ( 자동 언어 변환 )</param>
            <param name="itemValue">Value 설정</param>
            <param name="itemWidth">너비</param>
            <param name="itemChecked">체크 여부 기본 값 설정</param>
        </member>
        <member name="M:MateControls.CmCheckList.AddItem(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            ComMate: DataTable을 통한 Radio 아이템 추가
            </summary>
            <param name="dt">아이템으로 추가할 데이터 테이블 ( Text, Value 값으로 첫 두 컬럼 사용 )</param>
            <param name="itemWidth">아이템의 너비</param>
            <param name="itemCount">한 행에 보여질 아이템 갯수 지정</param>
        </member>
        <member name="M:MateControls.CmCheckList.AddRow">
            <summary>
            ComMate: 행 추가
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.ShowCheckAll">
            <summary>
            ComMate: 전체 선택 체크 박스 추가
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.allCheck_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            전체 선택 체크 박스 상태 변경 이벤트
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.IsChecked(System.String)">
            <summary>
            체크된 아이템들의 text 를 리스트 형태로 반환
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.GetCheckedTextList">
            <summary>
            체크된 아이템들의 text 를 리스트 형태로 반환
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.GetCheckedValueList">
            <summary>
            체크된 아이템들의 value 를 리스트 형태로 반환
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.GetCheckedIndexList">
            <summary>
            체크된 아이템들의 Index 를 리스트 형태로 반환
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.SetCheckedText(System.String)">
            <summary>
            지정 text 값의 아이템 체크 박스에 체크
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.SetCheckedValue(System.String)">
            <summary>
            지정 value 값의 아이템 체크 박스에 체크
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.SetCheckedIndex(System.Int32)">
            <summary>
            ComMate: 지정 Index 의 체크 박스에 체크
            전체 선택 체크 박스는 index 계산에서 제외
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.SetColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            ComMate: 컨트롤 텍스트 색상과 배경색을 지정 컬러로 설정
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.SetTransparent">
            <summary>
            ComMate: 컨트롤 배경색으로 투명으로 처리
            </summary>
        </member>
        <member name="F:MateControls.CmCheckList.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmCheckList.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmCheckList.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="E:MateControls.CmCheckList.ValueChanged">
            <summary>
            ComMate: ValueChange 이벤트
            </summary>
        </member>
        <member name="P:MateControls.CmCheckList.ItemCount">
            <summary>
            ComMate: 전체 선택을 제외한 체크박스 컨트롤 갯수 구하기
            </summary>
        </member>
        <member name="P:MateControls.CmCheckList.ForeColorType">
            <summary>
            ComMate: 텍스트 색상 타입
            </summary>
        </member>
        <member name="P:MateControls.CmCheckList.BackColorType">
            <summary>
            ComMate: 배경 색상 타입
            </summary>
        </member>
        <member name="P:MateControls.CmCheckList.Transparent">
            <summary>
            ComMate: 투명 처리
            </summary>
        </member>
        <member name="M:MateControls.cmBigDateTimePicker.OnFormatChanged(System.EventArgs)">
            <summary>
            ComMate: 포멧 바뀔 때 형식 자동 변경
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:MateControls.cmBigDateTimePicker.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.cmBigDateTimePicker.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.cmBigDateTimePicker.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.JAN13.Encode_JAN13">
            <summary>
            Encode the raw data using the JAN-13 algorithm.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.Codabar.Encode_Codabar">
            <summary>
            Encode the raw data using the Codabar algorithm.
            </summary>
        </member>
        <member name="F:MateForms.NoticeSmallPop_Qc.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.NoticeSmallPop_Qc.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.NoticeSmallPop_Qc.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateControls.CmButton.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmButton.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmButton.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:MateControls.CmButton.#ctor">
            <summary>
            ComMate: 생성자
            </summary>
        </member>
        <member name="F:MateForms.AcdForm.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateForms.AcdForm.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다.
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.SetStateBar(System.String,System.Object[])">
            <summary>
            ComMate: 상태바 설정
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.SetStateBar(System.String)">
            <summary>
            ComMate: 상태바 설정
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.SetValue(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            ComMate: 전역변수 설정
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.SetButton(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            ComMate: 버튼에 대한 권한 설정
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.Spread_OnLoad">
            <summary>
            ComMate: Spread 로드 시 기본 설정
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.Control_OnLoad">
            <summary>
            ComMate: 컨트롤 로드 시 기본 설정
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.Spread_ClipboardPasted(MateControls.CmSpread,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            ComMate: Spread 붙여넣기 수행 시
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.Spread_ClipboardCut(MateControls.CmSpread,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            ComMate: Spread 자르기 수행 시
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.Spread_SelectChecked(MateControls.CmSpread,System.Int32)">
            <summary>
            ComMate: Spread 선택 및 체크박스 체크 시
            </summary>
        </member>
        <member name="M:MateForms.AcdForm.Spread_UserContextMenu(MateControls.CmSpread,System.String,System.Object[])">
            <summary>
            ComMate: Spread 사용자 오른쪽 마우스 정의
            </summary>
        </member>
        <member name="F:MateControls.SpreadFilter.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateControls.SpreadFilter.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateControls.SpreadFilter.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MateControls.SpreadFilter.UpdateAllState">
            <summary>
            ComMate: 나머지 항목들의 상태로 "(전체)" 항목의 상태 갱신
            </summary>
        </member>
        <member name="M:MateControls.SpreadFilter.UpdateAllState(System.Int32)">
            <summary>
            ComMate: 나머지 항목들의 상태로 "(전체)" 항목의 상태 갱신
            </summary>
            <param name="checkedCountIncrement">체크된 항목 갯수에 +1 할지 여부</param>
        </member>
        <member name="M:MateControls.SpreadFilter.FindByKeyword(System.Boolean)">
            <summary>
            ComMate: 검색어로 검색하여 커서를 일치하는 항목으로 옮김
            </summary>
        </member>
        <member name="F:MateControls.CmLabel.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmLabel.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmLabel.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="P:MateControls.CmLabel.ForeColorType">
            <summary>
            ComMate: 라벨 텍스트 색상 타입
            </summary>
        </member>
        <member name="P:MateControls.CmLabel.BackColorType">
            <summary>
            ComMate: 컬러 타입 자동 설정
            </summary>
        </member>
        <member name="P:MateControls.CmLabel.Transparent">
            <summary>
            ComMate: 투명 처리
            </summary>
        </member>
        <member name="P:MateControls.CmLabel.CustomDesign">
            <summary>
            ComMate: 투명 처리
            </summary>
        </member>
        <member name="T:MateClass.CmProgress">
            <summary>
            ComMate: 진행 바 관련 Class
            </summary>
        </member>
        <member name="F:MateClass.CmProgress.StartIndex">
            <summary>
            ComMate: CmProgress 창 사용 여부 
            </summary>
        </member>
        <member name="M:MateClass.CmProgress.Start">
            <summary>
            ComMate: 진행바 시작
            </summary>
        </member>
        <member name="M:MateClass.CmProgress.Start(System.String)">
            <summary>
            ComMate: 진행바 시작
            </summary>
            <param name="msg"></param>
            <param name="useTranslation"></param>
        </member>
        <member name="M:MateClass.CmProgress.Start(System.String,System.Boolean)">
            <summary>
            ComMate: 진행바 시작
            </summary>
            <param name="msg"></param>
            <param name="useTranslation"></param>
        </member>
        <member name="M:MateClass.CmProgress.ChangeMessage(System.String)">
            <summary>
            ComMate: 진행바 메시지 변경
            </summary>
        </member>
        <member name="M:MateClass.CmProgress.Stop">
            <summary>
            ComMate: 진행바 중지
            </summary>
        </member>
        <member name="T:MateClass.CmSMS">
            <summary>
            ComMate: 문자열 처리 관련 공통 함수
            </summary>
        </member>
        <member name="M:MateClass.CmSMS.SendSMS(System.String,System.String,System.String)">
            <summary>
            문자발송 호출
            </summary>
            <param name="date">포맷:1900-01-01 01:02:00</param>
            <param name="PhoneNo">포맷:000-0000-0000</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:BarcodeLib.Symbologies.Code11.Encode_Code11">
            <summary>
            Encode the raw data using the Code 11 algorithm.
            </summary>
        </member>
        <member name="F:MateForms.KeyboardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.KeyboardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.KeyboardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MateForms.KeyboardForm.TextBoxFocus(System.Int32)">
            <summary>
            ComMate: 포커스를 텍스트 박스에 이동하고 selectionStart 지정 뒤에 개행 문자 존재 여부
            </summary>
        </member>
        <member name="P:MateForms.KeyboardForm.haveBefore">
            <summary>
            ComMate: 현재 포커스 앞에 개행 문자 존재 여부
            </summary>
        </member>
        <member name="P:MateForms.KeyboardForm.haveAfter">
            <summary>
            ComMate: 현재 포커스 뒤에 개행 문자 존재 여부
            </summary>
        </member>
        <member name="F:MateForms.SpreadStyle.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.SpreadStyle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.SpreadStyle.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.ProgramInfo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.ProgramInfo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.ProgramInfo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MateClass.CmDataAccess">
            <summary>
            ComMate: DataTable 처리 관련 함수
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetText(System.Data.DataTable,System.Int32,System.Enum)">
            <summary>
            ComMate: 지정 DataTable 에서 GetText()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetText(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            ComMate: 지정 DataTable 에서 GetText()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetText(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            ComMate: 지정 DataTable 에서 GetText()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetInt(System.Data.DataTable,System.Int32,System.Enum)">
            <summary>
            RJSOFT: 지정 DataTable 에서 GetInt()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetDateTime(System.Data.DataTable,System.Int32,System.Enum,System.Enum)">
            <summary>
            RJSOFT: 지정 DataTable 에서 GetDateText()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetDecimal(System.Data.DataTable,System.Int32,System.Enum)">
            <summary>
            RJSOFT: 지정 DataTable 에서 GetInt()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetValue(System.Data.DataTable,System.Int32,System.Enum)">
            <summary>
            ComMate: 지정 DataTable 에서 GetValue()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetValue(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            ComMate: 지정 DataTable 에서 GetValue()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.GetValue(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            ComMate: 지정 DataTable 에서 GetValue()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.SetText(System.Data.DataTable,System.Int32,System.Enum,System.String)">
            <summary>
            ComMate: 지정 DataTable 에 SetText()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.SetText(System.Data.DataTable,System.Int32,System.String,System.String)">
            <summary>
            ComMate: 지정 DataTable 에 SetText()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.SetText(System.Data.DataTable,System.Int32,System.Int32,System.String)">
            <summary>
            ComMate: 지정 DataTable 에 SetText()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.SetValue(System.Data.DataTable,System.Int32,System.Enum,System.Object)">
            <summary>
            ComMate: 지정 DataTable 에 SetValue()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.SetValue(System.Data.DataTable,System.Int32,System.String,System.Object)">
            <summary>
            ComMate: 지정 DataTable 에 SetValue()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.SetValue(System.Data.DataTable,System.Int32,System.Int32,System.Object)">
            <summary>
            ComMate: 지정 DataTable 에 SetValue()
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.YnToBool(System.Data.DataTable)">
            <summary>
            ComMate: DataTable 속에 'Y/N' 필드를 찾아 true/false bool형으로 변환
            </summary>
            <param name="dt">변환할 DataTable</param>
        </member>
        <member name="M:MateClass.CmDataAccess.BoolToYn(System.Data.DataTable)">
            <summary>
            ComMate: DataTable 속에 'true/fals' bool형 필드를 'Y/N' 문자형으로 변환
            </summary>
            <param name="dt">변환할 DataTable</param>
        </member>
        <member name="M:MateClass.CmDataAccess.CreateDataTable(System.String[],System.Object[])">
            <summary>
            ComMate: 스트링 배열을 입력 받아 DataTable 로 변환
            </summary>
            <param name="headers"></param>
            <param name="rows"></param>
        </member>
        <member name="M:MateClass.CmDataAccess.SelectDataTable(System.Data.DataTable,System.String)">
            <summary>
            DataTable에서 조건에 맞는 내용만 검색해서 새 DataTable 로 리턴
            </summary>
            <param name="dt">검색할 원본 DataTable</param>
            <param name="filterExpression">조건 입력</param>
            <returns></returns>
        </member>
        <member name="M:MateClass.CmDataAccess.AddByteColumn(System.Data.DataTable,System.String,System.String)">
            <summary>
            ComMate: Base64형식 문자열 컬럼으로부터 image ( Byte[] ) 형식 컬럼 추가
            </summary>
        </member>
        <member name="M:MateClass.CmDataAccess.SortDataTable(System.Data.DataTable,System.String)">
            <summary>
            ComMate: 지정 DataTable 의 특정 행의 RowState 를 가져오기
            </summary>
        </member>
        <member name="F:MateForms.ChangeDeveloperInfo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.ChangeDeveloperInfo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.ChangeDeveloperInfo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.CaptureForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.CaptureForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.CaptureForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateControls.CmLineVertical.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmLineVertical.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmLineVertical.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:MateControls.CmMaskedTextBox.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmMaskedTextBox.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmMaskedTextBox.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:MateClass.CmPLC">
            <summary>
            ComMate: PLC 처리 관련 공통 함수
            </summary>
        </member>
        <member name="F:MateForms.NoticeSmallPop.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.NoticeSmallPop.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.NoticeSmallPop.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.LoadConfigForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.LoadConfigForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.LoadConfigForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.FldPop.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.FldPop.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.FldPop.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateControls.CmSplitContainer.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmSplitContainer.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmSplitContainer.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="P:MateControls.CmSplitContainer.P1_BackColorType">
            <summary>
            ComMate: 컬러 타입 자동 설정
            </summary>
        </member>
        <member name="P:MateControls.CmSplitContainer.P2_BackColorType">
            <summary>
            ComMate: 컬러 타입 자동 설정
            </summary>
        </member>
        <member name="F:MateControls.CmRichTextBox.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmRichTextBox.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmRichTextBox.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:MateControls.CmRichTextBox.ExtendToRight">
            <summary>
            ComMate: Rich 텍스트박스 오른쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmRichTextBox.ExtendToBottom">
            <summary>
            ComMate: Rich 텍스트박스 아래쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmRichTextBox.ExtendToRightBottom">
            <summary>
            ComMate: Rich 텍스트박스 오른쪽 아래쪽으로 확장
            </summary>
        </member>
        <member name="P:MateControls.CmRichTextBox.TitleBackColor">
            <summary>
            ComMate: 버튼 타이틀 바 배경 색
            </summary>
        </member>
        <member name="E:MateControls.CmRichTextBox.TextChanged">
            <summary>
            ComMate: TextChanged 이벤트
            </summary>
        </member>
        <member name="P:MateControls.CmRichTextBox.EditBoxBackColor">
            <summary>
            ComMate: 편집 박스 배경 색
            </summary>
        </member>
        <member name="P:MateControls.CmRichTextBox.ReadOnly">
            <summary>
            ComMate: 읽기전용 여부
            </summary>
        </member>
        <member name="P:MateControls.CmRichTextBox.Rtf">
            <summary>
            ComMate: 서식 있는 텍스트 내용 가져오기
            </summary>
        </member>
        <member name="P:MateControls.CmRichTextBox.Text">
            <summary>
            ComMate: 서식 없는 텍스트 내용 가져오기
            </summary>
        </member>
        <member name="P:MateControls.CmRichTextBox.ShowToolbar">
            <summary>
            ComMate: 툴바 표시여부
            </summary>
        </member>
        <member name="P:MateControls.CmRichTextBox.LineHeight">
            <summary>
            ComMate: 줄 간격 ( /20단위 => 20.0 1배, 40.0 2배, 60.0 3배 )
            </summary>
        </member>
        <member name="F:MateClass.SqlResult.RowCount">
            <summary>
            ComMate: Commit 된 행 수
            </summary>
        </member>
        <member name="F:MateClass.SqlResult.ErrMessage">
            <summary>
            ComMate: Error 발생 시 에러메시지
            </summary>
        </member>
        <member name="F:MateClass.SqlResult.IsCommit">
            <summary>
            ComMate: Commit 여부 True/False
            </summary>
        </member>
        <member name="T:MateClass.CmSecurity">
            <summary>
            ComMate: 암호화 / 보안 관련 클래스
            </summary>
        </member>
        <member name="M:MateClass.CmSecurity.MD5Encrypt(System.String)">
            <summary>
            ComMate: MD5 헤시 코드로 암호화
            </summary>
        </member>
        <member name="M:MateClass.CmSecurity.DesEncrypt(System.String)">
            <summary>
            ComMate: Des 암호화
            </summary>
        </member>
        <member name="M:MateClass.CmSecurity.DesEncrypt(System.String,System.String)">
            <summary>
            ComMate: Des 암호화
            </summary>
        </member>
        <member name="M:MateClass.CmSecurity.DesDecrypt(System.String)">
            <summary>
            ComMate: Des 복호화
            </summary>
        </member>
        <member name="M:MateClass.CmSecurity.DesDecrypt(System.String,System.String)">
            <summary>
            ComMate: Des 복호화
            </summary>
        </member>
        <member name="M:MateClass.CmSecurity.RsaEncrypt(System.String,System.String)">
            <summary>
            ComMate: Rsa 암호화
            </summary>
        </member>
        <member name="M:MateClass.CmSecurity.RsaDecrypt(System.String,System.String)">
            <summary>
            ComMate: Rsa 복호화
            </summary>
        </member>
        <member name="F:MateClass.CmSecurity._pbkdf2Iteration">
            <summary>
            ComMate: PBKDF2의 반복 횟수. 현재 반복횟수는 따로 저장되지 않기 때문에 변경시 비밀번호를 다시 생성해야 함
            </summary>
        </member>
        <member name="F:MateClass.CmSecurity._pwdEncryptHashLength">
            <summary>
            ComMate: 비밀번호 해시값 길이 (솔트값 길이 + 2($$) 제외). 현재 길이는 따로 저장되지 않기 때문에 변경시 비밀번호를 다시 생성해야 함
            </summary>
        </member>
        <member name="F:MateClass.CmSecurity._pwdEncryptSaltSize">
            <summary>
            ComMate: 비밀번호 해시시 생성할 Salt 크기
            </summary>
        </member>
        <member name="M:MateClass.CmSecurity.PwdEncrypt(System.String)">
            <summary>
            ComMate: 비밀번호에 해당하는 해시 생성. 솔트값은 자동 생성
            </summary>
            <param name="passwd">비밀번호(평문)</param>
            <returns>해시값</returns>
        </member>
        <member name="M:MateClass.CmSecurity.PwdEncrypt(System.String,System.Int32)">
            <summary>
            ComMate: 비밀번호에 해당하는 해시 생성. 솔트값은 자동 생성
            </summary>
            <param name="passwd">비밀번호(평문)</param>
            <param name="iteration">PBKDF2 반복 횟수</param>
            <returns>솔트값$$해시값</returns>
        </member>
        <member name="M:MateClass.CmSecurity.PwdEncrypt(System.String,System.String)">
            <summary>
            ComMate: 비밀번호에 해당하는 해시 생성
            </summary>
            <param name="passwd">비밀번호(평문)</param>
            <param name="salt">솔트값</param>
            <returns>해시값</returns>
        </member>
        <member name="M:MateClass.CmSecurity.PwdEncrypt(System.String,System.String,System.Int32)">
            <summary>
            ComMate: 비밀번호에 해당하는 해시 생성. 솔트값은 자동 생성
            </summary>
            <param name="passwd">비밀번호(평문)</param>
            <param name="salt">솔트값</param>
            <param name="iteration">PBKDF2 반복 횟수</param>
            <returns>해시값</returns>
        </member>
        <member name="M:MateClass.CmSecurity.PwdEncrypt(System.String,System.Byte[])">
            <summary>
            ComMate: 비밀번호에 해당하는 해시 생성. 솔트값은 자동 생성
            </summary>
            <param name="passwd">비밀번호(평문)</param>
            <param name="salt">솔트값</param>
            <returns>해시값</returns>
        </member>
        <member name="M:MateClass.CmSecurity.PwdEncrypt(System.String,System.Byte[],System.Int32)">
            <summary>
            ComMate: 비밀번호에 해당하는 해시 생성. 솔트값은 자동 생성
            </summary>
            <param name="passwd">비밀번호(평문)</param>
            <param name="salt">솔트값</param>
            <param name="iteration">PBKDF2 반복 횟수</param>
            <returns>해시값</returns>
        </member>
        <member name="M:MateClass.CmSecurity.PwdCheck(System.String,System.String)">
            <summary>
            ComMate: 비밀번호 검사
            </summary>
            <param name="plainPasswd">비교할 평문 비밀번호</param>
            <param name="encryptedPasswd">비교할 비밀번호 해시값</param>
            <returns>동일함 여부</returns>
        </member>
        <member name="M:MateClass.CmSecurity.PwdCheck(System.String,System.String,System.Int32)">
            <summary>
            ComMate: 비밀번호 검사
            </summary>
            <param name="plainPasswd">비교할 평문 비밀번호</param>
            <param name="encryptedPasswd">비교할 비밀번호 해시값</param>
            <param name="iteration">PBKDF2 반복 횟수</param>
            <returns>동일함 여부</returns>
        </member>
        <member name="P:MateClass.CmSecurity.CertifyCode">
            <summary>
            ComMate: 웹서비스 호출 시 인증코드
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.EAN8.Encode_EAN8">
            <summary>
            Encode the raw data using the EAN-8 algorithm.
            </summary>
        </member>
        <member name="T:BarcodeLib.BarcodeXML">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:BarcodeLib.BarcodeXML.BarcodeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:BarcodeLib.BarcodeXML.BarcodeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:BarcodeLib.BarcodeXML.BarcodeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="F:MateForms.ShowMessage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.ShowMessage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.ShowMessage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.NoticeActivePop.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.NoticeActivePop.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.NoticeActivePop.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.SelectionUnits">
            <summary>
            ComMate: 스프레드 선택 모드
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.TextAlignType">
            <summary>
            ComMate: Spread Column 관련 Enum 리스트
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.RowState">
            <summary>
            ComMate: Spread Row 관련 Enum 리스트
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.TextType">
            <summary>
            ComMate: 텍스트 유형
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.ForeColorType">
            <summary>
            ComMate: 글자 색상 유형
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.BackColorType">
            <summary>
            ComMate: 배경 색상 유형
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.CellColorType">
            <summary>
            ComMate: 셀 색상 유형
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.DateTimeType">
            <summary>
            ComMate: 날자형 유형
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.LangType">
            <summary>
            ComMate: 언어 유형
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.MenuType">
            <summary>
            ComMate: 메뉴 표시 방법
            </summary>
        </member>
        <member name="T:MateClass.CmEnums.WeekType">
            <summary>
            ComMate: 요일 유형
            </summary>
        </member>
        <member name="T:MateClass.CmMath">
            <summary>
            ComMate: 수학 관련 함수
            </summary>
        </member>
        <member name="M:MateClass.CmMath.Round(System.Decimal,System.Int32)">
            <summary>
            ComMate: 반올림 처리
            </summary>
        </member>
        <member name="M:MateClass.CmMath.RoundDown(System.Decimal,System.Int32)">
            <summary>
            ComMate: 절삭
            </summary>
        </member>
        <member name="M:MateClass.CmMath.RoundUp(System.Decimal,System.Int32)">
            <summary>
            ComMate: 올림
            </summary>
        </member>
        <member name="M:MateClass.CmMath.Max(System.Object[])">
            <summary>
            ComMate: 최대치 구하기
            </summary>
        </member>
        <member name="M:MateClass.CmMath.Min(System.Object[])">
            <summary>
            ComMate: 최소치 구하기
            </summary>
        </member>
        <member name="M:MateClass.CmMath.Ave(System.Object[])">
            <summary>
            ComMate: 평균치 구하기
            </summary>
        </member>
        <member name="M:MateClass.CmMath.Sum(System.Object[])">
            <summary>
            ComMate: 합계 구하기
            </summary>
        </member>
        <member name="M:MateClass.CmImage.AdjustSizes(System.Int32@,System.Int32@,System.Drawing.Bitmap)">
            <summary>
            ComMate: 이미지 사이즈 조절
            </summary>
        </member>
        <member name="M:MateClass.CmImage.GetSourceByteAt(System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.IntPtr)">
            <summary>
            ComMate: 
            </summary>
        </member>
        <member name="M:MateClass.CmImage.IndexedRezise(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            ComMate: Indexed 형식 ( *.gif, *.png ) 으로 이미지 크기 조절
            </summary>
        </member>
        <member name="M:MateClass.CmImage.RGBRezise(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            ComMate: RGB 형식 (*.bmp, *.jpg, *.jpeg ) 으로 이미지 크기 조절
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.UPCSupplement5.Encode_UPCSupplemental_5">
            <summary>
            Encode the raw data using the UPC Supplemental 5-digit algorithm.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.EAN13.Encode_EAN13">
            <summary>
            Encode the raw data using the EAN-13 algorithm. (Can include the checksum already.  If it doesnt exist in the data then it will calculate it for you.  Accepted data lengths are 12 + 1 checksum or just the 12 data digits)
            </summary>
        </member>
        <member name="F:MateForms.LoginIdFind.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.LoginIdFind.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.LoginIdFind.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MateControls.CmTreeView.#ctor">
            <summary>
            ComMate: 생성자
            </summary>
        </member>
        <member name="F:MateControls.CmTreeView.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmTreeView.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmTreeView.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:MateClass.CmFileSystem">
            <summary>
            ComMate: 파일 시스템 관련 Class
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.CreateDirectory(System.String)">
            <summary>
            ComMate: 디렉토리 생성
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            ComMate: 폴더 전체 복사 ( 하위 폴더 및 파일 포함 )
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.DeleteDirectory(System.String)">
            <summary>
            ComMate: 폴더 전체 삭제 ( 하위 폴더 및 파일 동시 삭제 )
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.Base64ToImage(System.String)">
            <summary>
            ComMate: Base64 문자열을 이미지형식으로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.ByteToImage(System.Byte[])">
            <summary>
            ComMate: Byte[]을 이미지형식으로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.ImageToByte(System.Drawing.Image)">
            <summary>
            ComMate: 이미지를 Byte[] 로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.ImageToBase64(System.Drawing.Image)">
            <summary>
            ComMate: 이미지를 Base64 문자열로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.ByteToBase64(System.Byte[])">
            <summary>
            ComMate: Byte[]를 Base64 문자열로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.Base64ToByte(System.String)">
            <summary>
            ComMate:Base64 문자열로 Byte[] 로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.CreateTextFile(System.String,System.String)">
            <summary>
            ComMate: 지정 경로에 UTF-8형식의 텍스트 파일 만들기
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.CreateByteFile(System.String,System.Byte[])">
            <summary>
            ComMate: 지정 경로에 바이트 배열로 바이너리 파일 생성하기
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            ComMate: 파일 복사 ( 이미 존재 시 덮어씀 )
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.DeleteFile(System.String)">
            <summary>
            ComMate: 파일 삭제
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.ReadFileToByte(System.String)">
            <summary>
            ComMate: 바이너리 파일을 읽어서 Byte[] 로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.ReadFileToImage(System.String)">
            <summary>
            ComMate: 바이너리 파일을 읽어서 Image 로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.DownloadFile(System.String,System.String)">
            <summary>
            ComMate: 서버로부터 로컬로 파일 다운로드
            </summary>
            <param name="serverPath">서버 파일 ( 예: http://www.computermate.co.kr/commate/example.dll )</param>
            <param name="localPath">로컬 저장 경로 ( 예: C:\\ComMate\\example.dll )</param>
            <returns>다운로드 성공 여부 true/false</returns>
        </member>
        <member name="M:MateClass.CmFileSystem.DownloadFile(System.String)">
            <summary>
            ComMate: 서버로부터 바이너리 파일을 받아서 Byte[] 형태로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.DownloadImage(System.String)">
            <summary>
            ComMate: 서버로부터 바이너리 파일을 받아서 Byte[] 형태로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.GetIniValue(System.String,System.String,System.String)">
            <summary>
            ComMate: 지정 int 파일에서 값 가져오기
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.SetIniValue(System.String,System.String,System.String,System.String)">
            <summary>
            ComMate: 지정 int 파일에 값 설정하기
            </summary>
        </member>
        <member name="M:MateClass.CmFileSystem.ConvertPath(System.String)">
            <summary>
            ComMate: 상대 경로를 절대 경로로 변환
            </summary>
        </member>
        <member name="T:MateClass.CmFileDialog">
            <summary>
            ComMate: 파일 시스템 관련 Class
            </summary>
        </member>
        <member name="M:MateClass.CmFileDialog.OpenFile">
            <summary>
            ComMate: 파일 열기 확장자 지정
            </summary>
        </member>
        <member name="M:MateClass.CmFileDialog.SaveFile(System.String,System.Byte[])">
            <summary>
            ComMate: 파일 저장
            </summary>
        </member>
        <member name="T:MateClass.CmFileDialog.FileInfo">
            <summary>
            ComMate: 파일 정보 클래스
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.MSI.Encode_MSI">
            <summary>
            Encode the raw data using the MSI algorithm.
            </summary>
        </member>
        <member name="F:MateForms.NoticeSmallPop_Mold.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.NoticeSmallPop_Mold.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.NoticeSmallPop_Mold.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.LoginDuplication.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.LoginDuplication.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.LoginDuplication.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.KeyDateDay.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.KeyDateDay.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.KeyDateDay.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MateClass.CmReport.ShowViewer(CrystalDecisions.Windows.Forms.CrystalReportViewer,System.Object)">
            <summary>
            ComMate: 지정 리포트뷰어로 리포트 파일 띄우기
            </summary>
        </member>
        <member name="M:MateClass.CmReport.ShowDialog(System.Object)">
            <summary>
            ComMate: 모달창으로 리포트 파일 띄우기
            </summary>
        </member>
        <member name="M:MateClass.CmReport.DirectPrint(System.Object)">
            <summary>
            ComMate: 바로 출력하기
            </summary>
        </member>
        <member name="T:MateClass.CmMail">
            <summary>
            ComMate: 메일발송
            </summary>
        </member>
        <member name="T:MateClass.CmShortcut">
            <summary>
            ComMate: 단축키 설정 Class
            </summary>
        </member>
        <member name="F:MateClass.CmShortcut._SearchKey">
            <summary>
            ComMate: 조회용 단축키
            </summary>
        </member>
        <member name="F:MateClass.CmShortcut._AddKey">
            <summary>
            ComMate: 추가용 단축키
            </summary>
        </member>
        <member name="F:MateClass.CmShortcut._SaveKey">
            <summary>
            ComMate: 저장용 단축키
            </summary>
        </member>
        <member name="F:MateClass.CmShortcut._DeleteKey">
            <summary>
            ComMate: 삭제용 단축키
            </summary>
        </member>
        <member name="F:MateClass.CmShortcut._CancelKey">
            <summary>
            ComMate: 취소용 단축키
            </summary>
        </member>
        <member name="F:MateClass.CmShortcut._PreviewKey">
            <summary>
            ComMate: 미리보기용 단축키
            </summary>
        </member>
        <member name="F:MateClass.CmShortcut._PrintKey">
            <summary>
            ComMate: 인쇄용 단축키
            </summary>
        </member>
        <member name="M:MateClass.CmShortcut.LoadSettings">
            <summary>
            ComMate: 단축키 설정 다시 불러오기
            </summary>
        </member>
        <member name="M:MateClass.CmShortcut.Reset">
            <summary>
            ComMate: 기본 단축키 셋팅
            </summary>
        </member>
        <member name="T:MateClass.CmDateConvert">
            <summary>
            ComMate: 양음력 변환 클래스
            </summary>
        </member>
        <member name="M:MateClass.CmDateConvert.LunisolarToSolar(System.Int32,System.Int32,System.Int32)">
            <summary>
            ComMate: 음력 날짜 클래스 생성자
            </summary>
        </member>
        <member name="M:MateClass.CmDateConvert.SolarToLunisolar(System.DateTime)">
            <summary>
            ComMate: 양력을 음력으로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmDateConvert.IsLeapMonth(System.Int32,System.Int32)">
            <summary>
            ComMate: 전달한 음력 년월의 윤달여부를 확인합니다.
            </summary>
        </member>
        <member name="T:MateClass.CmDateConvert.LunisolarDate">
            <summary>
            ComMate: 음력 날짜 클래스
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.Postnet.Encode_Postnet">
            <summary>
            Encode the raw data using the PostNet algorithm.
            </summary>
        </member>
        <member name="M:MateForms.KeyPadForm.TextBoxFocus(System.Int32)">
            <summary>
            ComMate: 포커스를 텍스트 박스에 이동하고 selectionStart 지정 뒤에 개행 문자 존재 여부
            </summary>
        </member>
        <member name="F:MateForms.KeyPadForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.KeyPadForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.KeyPadForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MateForms.KeyPadForm.haveBefore">
            <summary>
            ComMate: 현재 포커스 앞에 개행 문자 존재 여부
            </summary>
        </member>
        <member name="P:MateForms.KeyPadForm.haveAfter">
            <summary>
            ComMate: 현재 포커스 뒤에 개행 문자 존재 여부
            </summary>
        </member>
        <member name="F:MateForms.ShowDebug.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.ShowDebug.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.ShowDebug.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.KeyDateTime.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.KeyDateTime.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.KeyDateTime.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MateClass.SqlParams">
            <summary>
            ComMate: 프로시저 호출에 사용되는 파라미터
            </summary>
        </member>
        <member name="M:MateClass.SqlParams.AddParam(System.String,System.Object)">
            <summary>
            ComMate: 프로시저 파라미터 배열에 파라미터 추가하기
            </summary>
            <param name="name">파라미터 이름</param>
            <param name="value">파라미터 변수 값</param>
        </member>
        <member name="M:MateClass.SqlParams.AddParam(System.Enum,System.Object)">
            <summary>
            
            </summary>
            <param name="dataField">Header Enum</param>
            <param name="value">파라미터 변수 값</param>
        </member>
        <member name="M:MateClass.SqlParams.AddParam(System.Enum,System.Object,System.Data.SqlDbType)">
            <summary>
            ComMate: 프로시저 파라미터 배열에 파라미터 추가하기
            </summary>
            <param name="dataField">Header Enum</param>
            <param name="value">파라미터 변수 값</param>
            <param name="sqlDbType">DB 필드 타입</param>
        </member>
        <member name="M:MateClass.SqlParams.AddParam(System.String,System.Object,System.Data.SqlDbType)">
            <summary>
            ComMate: 프로시저 파라미터 배열에 파라미터 추가하기
            </summary>
            <param name="name">파라미터 이름</param>
            <param name="value">파라미터 변수 값</param>
            <param name="sqlDbType">DB 필드 타입</param>
        </member>
        <member name="M:MateClass.SqlParams.#ctor">
            <summary>
            ComMate: 프로시저 이름을 지정한 생성자
            </summary>
        </member>
        <member name="M:MateClass.SqlParams.#ctor(System.String)">
            <summary>
            ComMate: 프로시저 이름을 지정한 생성자
            </summary>
            <param name="spName">스토어드 프로시저 이름</param>
        </member>
        <member name="M:MateClass.SqlParams.#ctor(System.String,System.String)">
            <summary>
            ComMate: 프로시저 이름을 지정한 생성자
            </summary>
            <param name="spName">스토어드 프로시저 이름</param>
            <param name="WorkGB">WorkGB</param>
        </member>
        <member name="M:MateClass.SqlParams.ToDataSet">
            <summary>
            ComMate 프로시저 파라미터 데이터셋으로 변환
            </summary>
        </member>
        <member name="M:MateClass.SqlParams.ToString">
            <summary>
            ComMate: 프로시저 호출을 문자열로 반환
            </summary>
        </member>
        <member name="M:MateClass.SqlParams.ToSqlParameter">
            <summary>
            ComMate: 파라미터 배열로 변환
            </summary>
        </member>
        <member name="P:MateClass.SqlParams.SpName">
            <summary>
            ComMate: 스토어드 프로시저 이름을 설정하거나 가져오기
            </summary>
        </member>
        <member name="T:MateClass.CmFormControl">
            <summary>
            ComMate: 컨트롤 관련 Class
            </summary>
        </member>
        <member name="F:MateClass.CmFormControl.MdiContainer">
            <summary>
            ComMate: MdiContainer 변수
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.IsCommonForm(System.Windows.Forms.Form)">
            <summary>
            ComMate: 시스템 폼 ( MainPjt, MateForms, Publish ) 인지 확인
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.IsCommonForm(System.String)">
            <summary>
            ComMate: 시스템 폼 ( MainPjt, MateForms, Publish ) 인지 확인
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.GetForm(System.Windows.Forms.Control)">
            <summary>
            ComMate: 컨트롤을 포함하고 있는 Form 객체 얻기
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.GetFormNameSpace(System.Windows.Forms.Form)">
            <summary>
            ComMate: 네임스페이스 얻기
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.GetFormNameSpace(System.Windows.Forms.Control)">
            <summary>
            ComMate: 컨트롤을 포함한 폼의 네임스페이스 얻기
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.GetFormFullName(System.Windows.Forms.Form)">
            <summary>
            ComMate: 네임스페이스를 포함한 폼 전체 이름 얻기
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.GetFormFullName(System.Windows.Forms.Control)">
            <summary>
            ComMate: 컨트롤을 포함한 폼의 폼 전체 이름 (네임스페이스 포함) 얻기
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.GetClientPoint(System.Windows.Forms.Control)">
            <summary>
            ComMate: 컨트롤의 절대 좌표 구하기
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.GetScreenPoint(System.Windows.Forms.Control)">
            <summary>
            ComMate: 컨트롤 좌표를 모니터 스크린 좌표로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.ExtendToRight(System.Windows.Forms.Control)">
            <summary>
            ComMate: 부모폼과의 AschorStyle 설정
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.Capture">
            <summary>
            ComMate: 화면 캡처
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.ShowKeyboard(MateControls.CmSpread,System.Int32,System.Enum)">
            <summary>
            ComMate: 가상 키보드 띄우기
            </summary>
        </member>
        <member name="M:MateClass.CmFormControl.ShowKeyPad(MateControls.CmSpread,System.Int32,System.Enum)">
            <summary>
            ComMate: 가상 키보드 띄우기(숫자)
            </summary>
        </member>
        <member name="P:MateClass.CmFormControl.ActiveMdiChild">
            <summary>
            ComMate: ActiveMdiChild 변수
            </summary>
        </member>
        <member name="F:MateForms.ChangePrinterForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.ChangePrinterForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.ChangePrinterForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.CalculateForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.CalculateForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.CalculateForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateControls.CmEllipse.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmEllipse.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmEllipse.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:MateClass.CmLocalInfo">
            <summary>
            ComMate: 컴퓨터 시스템 관련 정보 얻기
            </summary>
        </member>
        <member name="M:MateClass.CmLocalInfo.SetDefaultPrinter(System.String)">
            <summary>
            ComMate: 기본 프린터 변경
            </summary>
        </member>
        <member name="F:MateClass.CmLocalInfo._defaultPrintName">
            <summary>
            ComMate: 기본 프린터 임시 저장용
            </summary>
        </member>
        <member name="M:MateClass.CmLocalInfo.ChangeDefaultPrinter(System.String)">
            <summary>
            ComMate: 기본 프린터 변경
            </summary>
        </member>
        <member name="M:MateClass.CmLocalInfo.ResetDefaultPrinter">
            <summary>
            ComMate: 변경전 기본 프린터로 되돌림
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.HostName">
            <summary>
            ComMate: 컴퓨터 이름 얻기
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.IPAddress">
            <summary>
            ComMate: 클라이언트 로컬 IP 주소 얻기
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.WanIPAddress">
            <summary>
            ComMate: 클라이언트 외부 IP 주소 얻기
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.AssemblyPath">
            <summary>
            ComMate: 어샘블리 경로
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.IsRunMode">
            <summary>
            ComMate: 실행 모드 여부
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.ConfigFilePath">
            <summary>
            ComMate: 환경설정파일 경로
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.UserInfoFilePath">
            <summary>
            ComMate: 사용자 정보 환경 설정 파일 경로
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.ComputerInfoFilePath">
            <summary>
            ComMate: 컴퓨터 정보 환경 설정 파일 경로
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.ProgramTitle">
            <summary>
            ComMate: 프로그램 Title 정보
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.MessageBoxCaption">
            <summary>
            ComMate: 메시지 박스 Title 정보
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.DefaultPrintName">
            <summary>
            ComMate: 기본 프린터 이름
            </summary>
        </member>
        <member name="P:MateClass.CmLocalInfo.BarcodePrintName">
            <summary>
            ComMate: 바코드 전용 프린트 이름 ( 설정되어 있지 않을 경우 기본 프린터 )
            </summary>
        </member>
        <member name="M:MateClass.CmMemberShip.SetUserInfo(System.String,System.String)">
            <summary>
            ComMate: 사용자 정보 가져오기 
            ( 로그인 ) 성공시 사용자 아이디 리턴, 실패시 NO_USERID 혹은 NO_USERPASS 반환
            </summary>
        </member>
        <member name="M:MateClass.CmMemberShip.SetUserInfo(System.String,System.Data.DataTable)">
            <summary>
            ComMate: 사용자 정보 가져오기 
            ( 로그인 ) 성공시 사용자 아이디 리턴, 실패시 NO_USERID 혹은 NO_USERPASS 반환
            </summary>
        </member>
        <member name="P:MateClass.CmMemberShip.PERNNO">
            <summary>
            ComMate: 사원코드
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.UPCSupplement2.Encode_UPCSupplemental_2">
            <summary>
            Encode the raw data using the UPC Supplemental 2-digit algorithm.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.ISBN.Encode_ISBN_Bookland">
            <summary>
            Encode the raw data using the Bookland/ISBN algorithm.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.Code93.#ctor(System.String)">
            <summary>
            Encodes with Code93.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:BarcodeLib.Symbologies.Code93.Encode_Code93">
            <summary>
            Encode the raw data using the Code 93 algorithm.
            </summary>
        </member>
        <member name="T:MateClass.CmString">
            <summary>
            ComMate: 문자열 처리 관련 공통 함수
            </summary>
        </member>
        <member name="M:MateClass.CmString.IsAlphabet(System.String)">
            <summary>
            ComMate: 알파벳 여부 확인 ( 문자열 길이와 Byte 길이가 같다면 알파벳 )
            예: IsAlphabet("한글abc") => false
            </summary>
        </member>
        <member name="M:MateClass.CmString.IsDate(System.String)">
            <summary>
            ComMate: 지정 문자열이 데이터형식이 맞다면 yyyyMMdd 형식으로 리턴
            그렇지 않다면 "" 으로 리턴
            </summary>
        </member>
        <member name="M:MateClass.CmString.IsTime(System.String)">
            <summary>
            ComMate: 시간 형식인지 확인
            </summary>
        </member>
        <member name="M:MateClass.CmString.MsgFormat(System.String,System.Object[])">
            <summary>
            ComMate: CmMessageList 포멧에 따른 스트링 변환
            예: MsgFormat(CmMessageList._0_는_1_의두배이다, 4, 2) => "4는 2의 두배이다."
            </summary>
        </member>
        <member name="M:MateClass.CmString.DateFormat(System.String,System.DateTime)">
            <summary>
            ComMate: 날자/시간형 스트링 변환
            예: DateFormat("yyyy년MM월dd일 hh:mm:ss", DateTime.Now) => "2009년01월01일 12:01:01"
            </summary>
        </member>
        <member name="M:MateClass.CmString.DateFormat(System.String,System.String)">
            <summary>
            ComMate: 날자/시간형 스트링 변환
            </summary>
        </member>
        <member name="M:MateClass.CmString.WeekFormat(System.DateTime)">
            <summary>
            ComMate: 요일 반환
            예: WeekFormat(DateTime.Now) => "월"
            </summary>
        </member>
        <member name="M:MateClass.CmString.WeekFormat(System.DateTime,MateClass.CmEnums.WeekType)">
            <summary>
            ComMate: 요일 반환
            예: WeekFormat(DateTime.Now, CmEnums.WeekType.Long) => "월요일"
            </summary>
        </member>
        <member name="M:MateClass.CmString.DateDiff(System.String,System.DateTime,System.DateTime)">
            <summary>
            ComMate: 날짜사이의시간간격의숫자를반환
            예: DateDiff("d", DateTime.Now, DateTime.Now) => double형
            </summary>
        </member>
        <member name="M:MateClass.CmString.LengthFormat(System.String,System.Int32)">
            <summary>
            ComMate: 문자열앞에 포멧 길이만큼 문자 추가
            예: LengthFormat("0000", 34) => "0034"
            </summary>
        </member>
        <member name="M:MateClass.CmString.AddFormat(System.String,System.Int32)">
            <summary>
            ComMate: 문자열앞에 포멧 길이만큼 문자 추가
            예: AddFormat("0000", 34) => "0034"
            </summary>
        </member>
        <member name="M:MateClass.CmString.AddFormat(System.String,System.String)">
            <summary>
            ComMate: 문자열 앞에 포멧 길이만큼 문자 추가
            예: AddFormat("aaaa", "b") => "aaab"
            </summary>
        </member>
        <member name="M:MateClass.CmString.TelFormat(System.String,System.String)">
            <summary>
            ComMate: 입력 문자열을 전화 번호 형식으로 변환 
            예: TelFormat("-", "01074431316") => "010-7443-1316"
            </summary>
        </member>
        <member name="M:MateClass.CmString.MoneyFormat(System.Decimal)">
            <summary>
            ComMate: 첫단위 구분 소수점 아래 4자리 숫자 형식
            </summary>
        </member>
        <member name="M:MateClass.CmString.MoneyFormat(System.Int32)">
            <summary>
            ComMate: 첫단위 구분 소수점 아래 4자리 숫자 형식
            </summary>
        </member>
        <member name="M:MateClass.CmString.StringToByte(System.String)">
            <summary>
            ComMate: 문자열을 바이트 배열로 변환 ( 유니코드 )
            </summary>
        </member>
        <member name="M:MateClass.CmString.StringToBase64(System.String)">
            <summary>
            ComMate: 문자열을 Base64 문자열로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmString.AnsiToBase64(System.String)">
            <summary>
            ComMate: 문자열을 Base64 문자열로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmString.ByteToString(System.Byte[])">
            <summary>
            ComMate: 바이트 배열을 문자열로 변환 ( 유니코드 )
            </summary>
        </member>
        <member name="M:MateClass.CmString.AnsiToByte(System.String)">
            <summary>
            ComMate: ANSI 문자열을 바이트 배열로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmString.ByteToAnsi(System.Byte[])">
            <summary>
            ComMate: 바이트 배열을 ANSI 문자열로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmString.Base64ToByte(System.String)">
            <summary>
            ComMate: Base64 문자열을 바이트 배열로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmString.Base64ToString(System.String)">
            <summary>
            ComMate: Base64 문자열을 일반 문자열로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmString.ByteToBase64(System.Byte[])">
            <summary>
            ComMate: 바이트 배열을 Base64 문자열로 변환
            </summary>
        </member>
        <member name="M:MateClass.CmString.DateToLot(System.DateTime)">
            <summary>
            ComMate: 날짜를 롯트형날짜로 변환
            예: DateToLot(DateTime.Now) => "AAB"
            </summary>
        </member>
        <member name="M:MateClass.CmString.DateToLot(System.String)">
            <summary>
            ComMate: 날짜를 롯트형날짜로 변환
            예: DateToLot("2010-11-12") => "0AB" 혹은 DateToLot("20101112") => "0AB"
            </summary>
        </member>
        <member name="M:MateClass.CmString.LotToDateTime(System.String)">
            <summary>
            ComMate: 롯트형날짜를 일반 날짜형식으로 변환
            예: LotToDate("0AB") => new DateTime(2010, 11, 12)
            </summary>
        </member>
        <member name="M:MateClass.CmString.LotToDate(System.String)">
            <summary>
            ComMate: 롯트형날짜를 일반날짜로 변환
            예: LotToDate("0AB") => "20101112"
            </summary>
        </member>
        <member name="M:MateClass.CmString.BoolToYN(System.Boolean)">
            <summary>
            ComMate: 참/거짓 값을 Y/N 으로 변환 리턴
            </summary>
        </member>
        <member name="M:MateClass.CmString.BoolToYN(System.String)">
            <summary>
            ComMate: 참/거짓 값을 Y/N 으로 변환 리턴
            </summary>
        </member>
        <member name="M:MateClass.CmString.YnToBool(System.String)">
            <summary>
            ComMate: Y/N 을 참/거짓으로 변환 리턴
            </summary>
        </member>
        <member name="M:MateClass.CmString.NullToInt(System.Object)">
            <summary>
            ComMate: 값이 NULL 일때 int 형으로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmString.NullToString(System.Object)">
            <summary>
            ComMate: 값이 NULL 일때 string 형으로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmString.NullToDateTime(System.Object)">
            <summary>
            ComMate: 값이 NULL 일때 DateTime 형으로 반환 ( 1900-01-01 )
            </summary>
        </member>
        <member name="M:MateClass.CmString.NullToFloat(System.Object)">
            <summary>
            ComMate: 값이 NULL 일때 float 형으로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmString.NullToDecimal(System.Object)">
            <summary>
            ComMate: 값이 NULL 일때 decimal 형으로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmString.NullToDouble(System.Object)">
            <summary>
            ComMate: 값이 NULL 일때 double 형으로 반환
            </summary>
        </member>
        <member name="M:MateClass.CmString.NullToNewType(System.Object,System.Type)">
            <summary>
            ComMate: 값이 NULL 일때 지정 타입의 새 객체 반환
            </summary>
        </member>
        <member name="M:MateClass.CmString.WeekFirstDay(System.Int32,System.Int32)">
            <summary>
            ComMate: 해당 년의 특정번째 주의 시작일 구하기
            </summary>
        </member>
        <member name="M:MateClass.CmString.WeekFirstDay(System.Int32,System.Int32,System.Int32)">
            <summary>
            ComMate: 해당 년/월의 특정번째 주의 시작일 구하기
            </summary>
        </member>
        <member name="F:MateForms.MdiContainer.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateForms.MdiContainer.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다.
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.MdiContainer_Load(System.Object,System.EventArgs)">
            <summary>
            ComMate: 초기 로딩 이벤트
            </summary>
        </member>
        <member name="F:MateForms.MdiContainer.waitMsgCount">
            <summary>
            ComMate: 0.5초 단위로 윈도우 타이머 호출
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.MdiContainer_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            ComMate: 프로그램 닫기 전에 발생
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.MdiContainer_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            ComMate: 프로그램 닫은 후 사용중이던 리소스 제거
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.MdiContainer_MdiChildActivate(System.Object,System.EventArgs)">
            <summary>
            ComMate: 자식 폼이 활성화 될때 버튼 권한 설정 ( Enable/Disable )
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.SetOpenedForms">
            <summary>
            ComMate: 열려져 있는 폼 목록 설정
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.MdiLayout_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 메뉴 클릭 -> 창 정렬
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ToolStripCloseAll_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 메뉴 클릭 -> 모든 폼 닫기
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.MenuStrip_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 메뉴 클릭 -> 폼 로딩
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComSearch_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 조회 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComSave_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 저장 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComAdd_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 추가 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComDelete_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 삭제 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComCancel_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 취소 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComPrint_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 프린트 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComCapture_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 캡처 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComPreView_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 미리 보기 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnComExport_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: 내보내기 버튼 클릭 시
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.toolStripFactCombo_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            ComMate: 공장(사업장)정보가 변경될 때 발생
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnStyleSave_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: Spread 스타일 저장 버튼 클릭 시( 현재 미사용 )
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnStyleLoad_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: Spread 사용자 설정 버튼 클릭 시( 현재 미사용 )
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.btnStyleInit_Click(System.Object,System.EventArgs)">
            <summary>
            ComMate: Spread 초기화 버튼 클릭 시 ( 현재 미사용 )
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.OpenMdiChildForm(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            ComMate: 지정 폼 다운로드 및 로딩
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.LoadMdiForm(System.Collections.Generic.List{System.String},System.Object)">
            <summary>
            ComMate: 폼 띄우기
            </summary>
        </member>
        <member name="F:MateForms.MdiContainer.curMainMenu">
            <summary>
            ComMate: 메뉴 동적 생성 관련 프로퍼티
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ChangeMenuType">
            <summary>
            ComMate: Config.PjtCode 값을 읽어 해당 메뉴 구성
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.AdjustTreeNode(System.Windows.Forms.TreeNode)">
            <summary>
            ComMate: 트리메뉴 빈 메뉴 삭제
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ReloadMenu">
            <summary>
            ComMate: 메뉴를 새로 구성 ( 외부에서 호출용 )
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ConvertMenu(System.Boolean)">
            <summary>
            ComMate: 메뉴 언어변환
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.GetMenuTable(System.String)">
            <summary>
            ComMate: 그룹코드에 해당되는 하위 메뉴 데이터테이블 가져오기
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.AdjustMenuItem">
            <summary>
            ComMate: 메뉴 정리 및 언어 변환
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.AddMenu(System.Int32,System.String,System.Boolean)">
            <summary>
            ComMate: 메뉴 추가 ( 이벤트 없음 )
            </summary>
            <param name="level">메뉴 구성 레벨 값 ( 0:최상위메뉴 1:자식메뉴 2:자식의 자식메뉴 3:...</param>
            <param name="text">보여질 문자열</param>
        </member>
        <member name="M:MateForms.MdiContainer.AddMenu(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            ComMate: 메뉴 추가 ( 클릭 시 폼 로딩 )
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.AddMenu(System.Int32,System.String,System.Windows.Forms.MdiLayout,System.Boolean)">
            <summary>
            ComMate: 메뉴 추가 ( 창 정렬 )
            </summary>
            <param name="level">메뉴 구성 레벨 값 ( 0:최상위메뉴 1:자식메뉴 2:자식의 자식메뉴 3:...</param>
            <param name="text">보여질 문자열</param>
            <param name="mdiLayout">창 정렬 유형</param>
        </member>
        <member name="M:MateForms.MdiContainer.AddMenu(System.Int32)">
            <summary>
            ComMate: 메뉴 구분자 추가
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ToolStripTreeMenu_Click(System.Object,System.EventArgs)">
            <summary>
            트리 메뉴로 전환
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ToolStripDropDown_Click(System.Object,System.EventArgs)">
            <summary>
            드랍다운 메뉴로 전환
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ToolStripToolbarAlign_Click(System.Object,System.EventArgs)">
            <summary>
            툴바 정렬
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ChangeToolbarAlign">
            <summary>
            툴바 정렬 바꾸기
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.ShowTreeMenu">
            <summary>
            트리메뉴 보이기
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.HiddenTreeMenu">
            <summary>
            ComMate: 트리메뉴 숨기기
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.AutoHiddenTreeMenu">
            <summary>
            ComMate: 자동 숨기기 경우에만 메뉴 숨기기
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.cmTextBox_MenuSearchKeyword_TextChanged(System.Object,System.EventArgs)">
            <summary>
            ComMate: 메뉴 검색
            </summary>
        </member>
        <member name="M:MateForms.MdiContainer.RebuildMenuSeachResult(System.String,System.Windows.Forms.TreeView)">
            <summary>
            ComMate: 메뉴검색 결과 만듬
            </summary>
        </member>
        <member name="M:MateControls.CmTextBox.#ctor">
            <summary>
            ComMate: 생성자
            </summary>
        </member>
        <member name="F:MateControls.CmTextBox.Mask">
            <summary>
            ComMate: Mask 형식 지정 ( TextType 이 Mask 경우만 사용 )
            </summary>
        </member>
        <member name="F:MateControls.CmTextBox.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmTextBox.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmTextBox.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="P:MateControls.CmTextBox.TextType">
            <summary>
            ComMate: 텍스트 박스 형식 설정
            </summary>
        </member>
        <member name="F:MateForms.FldForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.FldForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.FldForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.FldForm.ActiveSpread">
            <summary>
            ComMate: 현재 ActiveSpread
            </summary>
        </member>
        <member name="F:MateForms.FldForm.PrintSpread">
            <summary>
            ComMate: 출력할 기본 Spread
            </summary>
        </member>
        <member name="F:MateForms.FldForm.ExportSpread">
            <summary>
            ComMate: 외부 파일로 내보낼 Spread
            </summary>
        </member>
        <member name="M:MateForms.FldForm.Spread_ClipboardPasted(MateControls.CmSpread,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            ComMate: Spread 붙여넣기 수행 시
            </summary>
        </member>
        <member name="M:MateForms.FldForm.Spread_ClipboardCut(MateControls.CmSpread,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            ComMate: Spread 자르기 수행 시
            </summary>
        </member>
        <member name="M:MateForms.FldForm.Spread_SelectChecked(MateControls.CmSpread,System.Int32)">
            <summary>
            ComMate: Spread 선택 및 체크박스 체크 시
            </summary>
        </member>
        <member name="M:MateForms.FldForm.Spread_UserContextMenu(MateControls.CmSpread,System.String,System.Object[])">
            <summary>
            ComMate: Spread 사용자 오른쪽 마우스 정의
            </summary>
        </member>
        <member name="M:MateForms.FldForm.Spread_OnLoad">
            <summary>
            ComMate: Spread 로드 시 기본 설정
            </summary>
        </member>
        <member name="M:MateForms.FldForm.Control_OnLoad">
            <summary>
            ComMate: 컨트롤 로드 시 기본 설정
            </summary>
        </member>
        <member name="M:MateForms.FldForm.SetStateBar(System.String)">
            <summary>
            ComMate: 상태바 설정
            </summary>
        </member>
        <member name="M:MateForms.FldForm.SetStateBar(System.String,System.Object[])">
            <summary>
            ComMate: 상태바 설정
            </summary>
        </member>
        <member name="F:MateForms.FldForm.QueryResult">
            <summary>
            ComMate: 쿼리 결과 상태를 저장하는 변수 
            ( MainPjt 의 timer 에서 호출 및 상태 설정 )
            </summary>
        </member>
        <member name="T:MateControls.CmRadioList">
            <summary>
            ComMate: 라디오 박스 리스트 ( 아이템 동적 추가 가능 )
            </summary>
        </member>
        <member name="M:MateControls.CmRadioList.#ctor">
            <summary>
            ComMate: 생성자
            </summary>
        </member>
        <member name="M:MateControls.CmRadioList.AddItem(System.String,System.Object,System.Int32)">
            <summary>
            Radio 아이템 추가
            </summary>
            <param name="itemText">라벨 Text</param>
            <param name="itemValue">Value 설정</param>
            <param name="itemWidth">너비</param>
        </member>
        <member name="M:MateControls.CmRadioList.AddItem(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            ComMate: DataTable을 통한 Radio 아이템 추가
            </summary>
            <param name="dt">아이템으로 추가할 데이터 테이블 ( Text, Value 값으로 첫 두 컬럼 사용 )</param>
            <param name="itemWidth">아이템의 너비</param>
            <param name="itemCount">한 행에 보여질 아이템 갯수 지정</param>
        </member>
        <member name="M:MateControls.CmRadioList.AddRow">
            <summary>
            ComMate: 행 추가
            </summary>
        </member>
        <member name="M:MateControls.CmRadioList.radio_Click(System.Object,System.EventArgs)">
            <summary>
            아이템 클릭 시
            </summary>
        </member>
        <member name="M:MateControls.CmRadioList.SetColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            ComMate: 컨트롤 텍스트 색상과 배경색을 지정 컬러로 설정
            </summary>
        </member>
        <member name="M:MateControls.CmRadioList.SetTransparent">
            <summary>
            ComMate: 컨트롤 배경색으로 투명으로 처리
            </summary>
        </member>
        <member name="F:MateControls.CmRadioList.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmRadioList.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmRadioList.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="E:MateControls.CmRadioList.ValueChanged">
            <summary>
            ComMate: ValueChange 이벤트
            </summary>
        </member>
        <member name="P:MateControls.CmRadioList.SelectedIndex">
            <summary>
            현재 선택한 Index
            </summary>
        </member>
        <member name="P:MateControls.CmRadioList.SelectedText">
            <summary>
            선택 아이템의 Text 값 가져오거나 설정하기
            </summary>
        </member>
        <member name="P:MateControls.CmRadioList.SelectedValue">
            <summary>
            선택 아이템의 Value 값 가져오거나 설정하기
            </summary>
        </member>
        <member name="P:MateControls.CmRadioList.ForeColorType">
            <summary>
            ComMate: 텍스트 색상 타입
            </summary>
        </member>
        <member name="P:MateControls.CmRadioList.BackColorType">
            <summary>
            ComMate: 배경 색상 타입
            </summary>
        </member>
        <member name="P:MateControls.CmRadioList.Transparent">
            <summary>
            ComMate: 투명 처리
            </summary>
        </member>
        <member name="F:MateControls.CmNumeric.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmNumeric.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmNumeric.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:MateControls.CmNumeric.SelectAll">
            <summary>
            ComMate: 내용 반전
            </summary>
        </member>
        <member name="M:MateControls.CmNumeric.AppendThreeZeros">
            <summary>
            ComMate : 정수자리 마지막에 000을 붙임
            </summary>
        </member>
        <member name="F:MateControls.CmChart.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmChart.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmChart.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:MateModule.Properties.Resources">
            <summary>
              지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:MateModule.Properties.Resources.ResourceManager">
            <summary>
              이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:MateModule.Properties.Resources.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대한 현재 스레드의 CurrentUICulture
              속성을 재정의합니다.
            </summary>
        </member>
        <member name="F:MateForms.SearchForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.SearchForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.SearchForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MateControls.CustomRowFilterItem">
            <summary>
            ComMate: 실제 필터를 하는 부분
            </summary>
        </member>
        <member name="P:MateControls.CustomRowFilterItem.FilteringSet">
            <summary>
            ComMate: 필터링 된 목록
            </summary>
        </member>
        <member name="T:MateControls.CmDateTimePicker">
            <summary>
            ComMate: 데이터타입형 텍스트 박스
            </summary>
        </member>
        <member name="F:MateControls.CmDateTimePicker.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmDateTimePicker.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmDateTimePicker.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:MateControls.CmDateTimePicker._isCustomFormat">
            <summary>
            ComMate: OnFormatChanged() 이벤트 무한 루프 방지 용
            </summary>
        </member>
        <member name="M:MateControls.CmDateTimePicker.#ctor">
            <summary>
            ComMate: MateDateTimePicker 생성자
            </summary>
        </member>
        <member name="M:MateControls.CmDateTimePicker.OnFormatChanged(System.EventArgs)">
            <summary>
            ComMate: 포멧 바뀔 때 형식 자동 변경
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:MateClass.SqlProcedure">
            <summary>
            ComMate: 웹서비스를 통한 데이터베이스 쿼리문 전송
            </summary>
        </member>
        <member name="M:MateClass.SqlProcedure.ExecuteDataset(MateClass.SqlParams)">
            <summary>
            ComMate: 쿼리 결과를 DataSet 으로 받기
            </summary>
        </member>
        <member name="M:MateClass.SqlProcedure.ExecuteNonQuery(MateClass.SqlParams)">
            <summary>
            ComMate: 변경된 행 Count만 리턴하는 쿼리문 날리기
            </summary>
        </member>
        <member name="M:MateClass.SqlProcedure.ExecuteScalar(MateClass.SqlParams)">
            <summary>
            ComMate: 단일 리턴을 얻기 위한 쿼리문 날리기
            </summary>
        </member>
        <member name="F:MateControls.CmCheckBox.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmCheckBox.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmCheckBox.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:MateClass.CmMessageList">
            <summary>
            ComMate: 공용 메시지 입니다.
            </summary>
        </member>
        <member name="T:MateClass.CmDirectPrint">
            <summary>
            ComMate: Zebra 다이렉트 인쇄관련
            </summary>
        </member>
        <member name="M:MateClass.CmDirectPrint.SetText(MateClass.CmEnums.ZebraBarCodeType,System.String,System.String,System.String,System.String)">
            <summary>
            ComMate: 지정 바코드용지에 SetText()
            사용 : TYPE, X좌표, Y좌표, 크기, 내용
            </summary>
        </member>
        <member name="T:MateClass.CmFormBtnSet">
            <summary>
            ComMate: 폼 권한 Class
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.FactGB">
            <summary>
            ComMate: 기본 공장
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.BtnSet">
            <summary>
            버튼 권한 설정 유무 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.Search">
            <summary>
            조회 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.Save">
            <summary>
            저장 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.Insert">
            <summary>
            추가 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.Delete">
            <summary>
            삭제 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.Cancel">
            <summary>
            취소 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.Print">
            <summary>
            프린트 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.PreView">
            <summary>
            미리보기 권한 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.Export">
            <summary>
            엑셀 권한 true / false
            </summary>
        </member>
        <member name="M:MateClass.CmFormBtnSet.SetBtnVisible(System.String)">
            <summary>
            ComMate: 서버에서 폼 권한 가져오기
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.HasSearch">
            <summary>
            조회 기능 구현 유무 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.HasSave">
            <summary>
            저장 기능 구현 유무 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.HasInsert">
            <summary>
            추가 기능 구현 유무 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.HasDelete">
            <summary>
            삭제 기능 구현 유무 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.HasCancel">
            <summary>
            취소 기능 구현 유무 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.HasPrint">
            <summary>
            프린트 기능 구현 유무 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.HasPreView">
            <summary>
            미리보기 기능 구현 유무 true / false
            </summary>
        </member>
        <member name="F:MateClass.CmFormBtnSet.HasExport">
            <summary>
            엑셀 기능 구현 유무 true / false
            </summary>
        </member>
        <member name="F:MateForms.ShowMessageField.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.ShowMessageField.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.ShowMessageField.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateControls.CmLineHorizon.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmLineHorizon.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmLineHorizon.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:MateForms.ReportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.ReportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.ReportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateForms.NavigationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.NavigationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.NavigationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateControls.CmRadioButton.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmRadioButton.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmRadioButton.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.UPCE.#ctor(System.String)">
            <summary>
            Encodes a UPC-E symbol.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:BarcodeLib.Symbologies.UPCE.Encode_UPCE">
            <summary>
            Encode the raw data using the UPC-E algorithm.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.Telepen.#ctor(System.String)">
            <summary>
            Encodes data using the Telepen algorithm.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:BarcodeLib.Symbologies.Telepen.Encode_Telepen">
            <summary>
            Encode the raw data using the Telepen algorithm.
            </summary>
        </member>
        <member name="F:MateForms.NoticeAllPop.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.NoticeAllPop.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.NoticeAllPop.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateControls.CmPanel.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmPanel.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmPanel.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:MateControls.CmPanel.ExtendToRight">
            <summary>
            ComMate: 탭컨트롤 오른쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmPanel.ExtendToBottom">
            <summary>
            ComMate: 탭컨트롤 아래쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmPanel.ExtendToRightBottom">
            <summary>
            ComMate: 탭컨트롤 오른쪽 아래쪽으로 확장
            </summary>
        </member>
        <member name="M:MateControls.CmPanel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            ComMate: 오른쪽 마우스 버튼을 눌렀을때 개발자용 메뉴 띄우기
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:MateControls.CmPanel.BackColorType">
            <summary>
            ComMate: 컬러 타입 자동 설정
            </summary>
        </member>
        <member name="M:MateClass.CmFileServer.UploadFile(System.String)">
            <summary>
            파일 업로드
            </summary>
        </member>
        <member name="M:MateClass.CmFileServer.DeleteFile(System.String)">
            <summary>
            파일삭제
            </summary>
        </member>
        <member name="M:MateClass.CmFileServer._DeleteFileWeb(System.String)">
            <summary>
            파일삭제 (웹서비스)
            </summary>
        </member>
        <member name="M:MateClass.CmFileServer.DownloadImage(System.String)">
            <summary>
            파일 다운로드
            </summary>
        </member>
        <member name="M:MateClass.CmFileServer.DownloadFile(System.String,System.String)">
            <summary>
            로컬로 다운로드
            </summary>
        </member>
        <member name="M:MateClass.CmFileServer.DownloadByte(System.String)">
            <summary>
            바이트 배열로 다운로드
            </summary>
        </member>
        <member name="T:MateClass.CmPrinter">
            <summary>
            ComMate: 프린터 관련
            </summary>
        </member>
        <member name="M:MateClass.CmPrinter.SendBytesToPrinter(System.String,System.IntPtr,System.Int32)">
            <summary>
            ComMate: 프린터로 바이트 배열 날리기
            </summary>
        </member>
        <member name="M:MateClass.CmPrinter.SendFileToPrinter(System.String,System.String)">
            <summary>
            ComMate: 프린터로 파일 날리기
            </summary>
        </member>
        <member name="M:MateClass.CmPrinter.SendStringToPrinter(System.String,System.String)">
            <summary>
            ComMate: 프린터로 문자열 날리기
            </summary>
        </member>
        <member name="F:MateClass.CmPrinter._defaultPrintName">
            <summary>
            ComMate: 기본 프린터 임시 저장용
            </summary>
        </member>
        <member name="M:MateClass.CmPrinter.ChangeDefaultPrinter(System.String)">
            <summary>
            ComMate: 기본 프린터 변경
            </summary>
        </member>
        <member name="M:MateClass.CmPrinter.ResetDefaultPrinter">
            <summary>
            ComMate: 변경전 기본 프린터로 되돌림
            </summary>
        </member>
        <member name="M:MateClass.CmPrinter.GetPrinterList">
            <summary>
            ComMate: 설치된 프린터 목록 가져오기
            </summary>
        </member>
        <member name="M:MateClass.CmPrinter.IsPrinterOnline(System.String)">
            <summary>
            ComMate: 프린터 온라인 여부
            </summary>
        </member>
        <member name="P:MateClass.CmPrinter.BarcodePrintName">
            <summary>
            ComMate: 바코드 전용 프린트 이름 ( 설정되어 있지 않을 경우 기본 프린터 )
            </summary>
        </member>
        <member name="P:MateClass.CmPrinter.GeneralPrintName">
            <summary>
            ComMate: 일반 프린터 이름 ( 설정되어 있지 않을 경우 기본 프린터 )
            </summary>
        </member>
        <member name="P:MateClass.CmPrinter.DefaultPrintName">
            <summary>
            ComMate: 기본 프린터 이름
            </summary>
        </member>
        <member name="T:MateClass.CmPrinter.DOCINFOA">
            <summary>
            ComMate: 윈도우 API 정의
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.Interleaved2of5.Encode_Interleaved2of5">
            <summary>
            Encode the raw data using the Interleaved 2 of 5 algorithm.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.Code39.#ctor(System.String)">
            <summary>
            Encodes with Code39.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:BarcodeLib.Symbologies.Code39.#ctor(System.String,System.Boolean)">
            <summary>
            Encodes with Code39.
            </summary>
            <param name="input">Data to encode.</param>
            <param name="AllowExtended">Allow Extended Code 39 (Full Ascii mode).</param>
        </member>
        <member name="M:BarcodeLib.Symbologies.Code39.Encode_Code39">
            <summary>
            Encode the raw data using the Code 39 algorithm.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.Code128.#ctor(System.String)">
            <summary>
            Encodes data in Code128 format.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:BarcodeLib.Symbologies.Code128.#ctor(System.String,BarcodeLib.Symbologies.Code128.TYPES)">
            <summary>
            Encodes data in Code128 format.
            </summary>
            <param name="input">Data to encode.</param>
            <param name="type">Type of encoding to lock to. (Code 128A, Code 128B, Code 128C)</param>
        </member>
        <member name="F:MateForms.LoginPassEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.LoginPassEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.LoginPassEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MateClass.CmSaveHtml">
            <summary>
            ComMate: 크리스탈,스프레드 HTML 변환후 전자결재 올리는 Class
            </summary>
        </member>
        <member name="M:MateClass.CmSaveHtml.SpdToHtml(MateControls.CmSpread,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            ComMate: 스프레드->HTML 변환 key1=부서코드, key2=일자, key3=sycd, key4=fssq
            </summary>
        </member>
        <member name="M:MateClass.CmSaveHtml.ReportToHtml(CrystalDecisions.CrystalReports.Engine.ReportClass,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            ComMate: 크리스탈->HTML 변환 key1=부서코드, key2=일자, key3=sycd, key4=fssq
            </summary>
        </member>
        <member name="F:MateForms.UpdateForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MateForms.UpdateForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MateForms.UpdateForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MateControls.CmGroupBox.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:MateControls.CmGroupBox.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:MateControls.CmGroupBox.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:MateClass.CmServerInfo">
            <summary>
            ComMate: 컴퓨터 시스템 관련 정보 얻기
            </summary>
        </member>
        <member name="M:MateClass.CmServerInfo.ChangeDBName(System.String)">
            <summary>
            ComMate: 서버 가이드 문서 디렉토리 목록
            </summary>
            
        </member>
        <member name="M:MateClass.CmServerInfo.GetGlobalValue(System.String)">
            <summary>
            ComMate: 전역변수 값 가져오기
            </summary>
            <param name="CODDCD">전역변수 코드</param>
            <returns>공통코드 A005에 있는 값</returns>
        </member>
        <member name="F:MateClass.CmServerInfo._ErrChkTime">
            <summary>
            ComMate: 서버 연결오류시 디비 연결체크시간
            </summary>
        </member>
        <member name="P:MateClass.CmServerInfo.ServerUrl">
            <summary>
            ComMate: 서버 URL
            </summary>
        </member>
        <member name="P:MateClass.CmServerInfo.ServerDateTime">
            <summary>
            ComMate: 클라이언트 로컬 IP 주소 얻기
            </summary>
        </member>
        <member name="T:MateClass.CmEvents">
            <summary>
            ComMate: 이벤트 관련 함수
            </summary>
        </member>
        <member name="F:MateClass.CmColors.RequiredForeColor">
            <summary>
            ComMate: 필수 입력 항목 텍스트 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.RequiredHelpForeColor">
            <summary>
            ComMate: 필수 입력 / 도움말 항목 텍스트 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.OptionForeColor">
            <summary>
            ComMate: 옵션 입력 텍스트 색상
            </summary>
        </member>
        <!-- 잘못된 형식의 XML 주석은 "F:MateClass.CmColors.OptionHelpForeColor" 멤버에 대해 무시됩니다. -->
        <member name="F:MateClass.CmColors.Custom">
            <summary>
            ComMate: 사용자 지정 텍스트 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.SearchLabelBackColor">
            <summary>
            ComMate: 조회 영역 패널 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.DetailLabelBackColor">
            <summary>
            ComMate: 상세 영역 패널 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.SearchPanelBackColor">
            <summary>
            ComMate: 조회 영역 라벨 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.DetailPanelBackColor">
            <summary>
            ComMate: 상세 영역 라벨 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.SearchRadioListBackColor">
            <summary>
            ComMate: 조회 영역 패널 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.DetailRadioListBackColor">
            <summary>
            ComMate: 상세 영역 패널 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.ReadOnlyBackColor">
            <summary>
            ComMate: 읽기전용 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.RowInsertBackColor">
            <summary>
            ComMate: 삽입 행 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.RowUpdateBackColor">
            <summary>
            ComMate: 업데이트 행 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.RowDeleteBackColor">
            <summary>
            ComMate: 삭제 행 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.RowLockedBackColor">
            <summary>
            ComMate: 잠금 행 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.RowSubtotalBackColor">
            <summary>
            ComMate: 소계 행 배경 색상
            </summary>
        </member>
        <member name="F:MateClass.CmColors.RowTotalBackColor">
            <summary>
            ComMate: 총계 행 배경 색상
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddText(System.String,System.Single,System.Single)">
            <summary>
            ComMate: 텍스트 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddText(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ComMate: 텍스트 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddText(System.String,System.Drawing.RectangleF)">
            <summary>
            ComMate: 텍스트 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ComMate: 이미지 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            ComMate: 이미지 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddBarcode(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ComMate: 바코드 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddBarcode(System.String,System.Drawing.RectangleF)">
            <summary>
            ComMate: 바코드 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ComMate: 직선 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddLine(System.Drawing.RectangleF)">
            <summary>
            ComMate: 직선 추가 (단위 mm)
            </summary>
            
        </member>
        <member name="M:MateClass.CmBarcode.AddCircle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ComMate: 타원 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddCircle(System.Drawing.RectangleF)">
            <summary>
            ComMate: 타원 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ComMate: 사각형 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddRectangle(System.Drawing.RectangleF)">
            <summary>
            ComMate: 사각형 추가 (단위 mm)
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.AddPageBreak">
            <summary>
            ComMate: 페이지 넘김
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.Clear">
            <summary>
            ComMate: 그리기 초기화
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.Print(System.Boolean)">
            <summary>
            ComMate: 인쇄
            </summary>
            <param name="IsPreview">미리보기 여부</param>
        </member>
        <member name="M:MateClass.CmBarcode.LoadBarcodeByCode(System.String)">
            <summary>
            바코드디자인을 DB에서 가져옴
            </summary>
            <param name="barcodeCd">바코드 코드</param>
            <returns>읽기 성공 여부</returns>
        </member>
        <member name="M:MateClass.CmBarcode.GetBarcode1DBytes(MateClass.CmBarcode.Barcode1DTypes,System.String)">
            <summary>
            1차원 바코드 PNG 이미지를 byte배열로 얻기
            </summary>
            <param name="barcode1DType">바코드 종류</param>
            <param name="code">코드</param>
            <returns>바코드 byte 배열</returns>
        </member>
        <member name="M:MateClass.CmBarcode.GetBarcode1DBytes(MateClass.CmBarcode.Barcode1DTypes,System.String,System.Int32,System.Int32)">
            <summary>
            1차원 바코드 PNG 이미지를 byte배열로 얻기
            </summary>
            <param name="barcode1DType">바코드 종류</param>
            <param name="code">코드</param>
            <param name="minimumWidth">최소 너비</param>
            <param name="minimumHeight">최소 높이</param>
            <returns>바코드 byte 배열</returns>
        </member>
        <member name="M:MateClass.CmBarcode.GetBarcode1DBytes(MateClass.CmBarcode.Barcode1DTypes,System.String,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            1차원 바코드 이미지를 byte배열로 얻기
            </summary>
            <param name="barcode1DType">바코드 종류</param>
            <param name="code">코드</param>
            <param name="minimumWidth">최소 너비</param>
            <param name="minimumHeight">최소 높이</param>
            <param name="imageFormat">이미지 포맷</param>
            <returns>바코드 byte 배열</returns>
        </member>
        <member name="M:MateClass.CmBarcode.GetBarcode2DBytes(MateClass.CmBarcode.Barcode2DTypes,System.String,System.Int32,System.Int32)">
            <summary>
            2차원 바코드 이미지를 byte배열로 얻기
            </summary>
            <param name="barcode2DType">바코드 종류</param>
            <param name="code">코드</param>
            <param name="minimumWidth">최소 너비</param>
            <param name="minimumHeight">최소 높이</param>
            <returns>2차원 바코드 byte 배열</returns>
        </member>
        <member name="M:MateClass.CmBarcode.GetBarcode2DBytes(MateClass.CmBarcode.Barcode2DTypes,System.String,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            2차원 바코드 이미지를 byte배열로 얻기
            </summary>
            <param name="barcode2DType">바코드 종류</param>
            <param name="code">코드</param>
            <param name="minimumWidth">최소 너비</param>
            <param name="minimumHeight">최소 높이</param>
            <param name="imageFormat">이미지 포맷</param>
            <returns>2차원 바코드 byte 배열</returns>
        </member>
        <member name="M:MateClass.CmBarcode.CreateBarcode1D(MateClass.CmBarcode.Barcode1DTypes,System.String)">
            <summary>
            1차원 바코드 Image 얻기
            </summary>
            <param name="barcode1DType"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:MateClass.CmBarcode.CreateBarcode1D(MateClass.CmBarcode.Barcode1DTypes,System.String,System.Int32,System.Int32,System.Single)">
            <summary>
            1차원 바코드 Image 얻기
            </summary>
            <param name="barcode1DType"></param>
            <param name="code"></param>
            <param name="minimumWidth"></param>
            <param name="minimumHeight"></param>
            <param name="narrowBarcodeFactor"></param>
            <returns></returns>
        </member>
        <member name="M:MateClass.CmBarcode.CreateBarcode2D(MateClass.CmBarcode.Barcode2DTypes,System.String,System.Int32,System.Int32)">
            <summary>
            2차원 바코드 Image 얻기
            </summary>
            <param name="barcode2DType"></param>
            <param name="code"></param>
            <param name="minimumWidth"></param>
            <param name="minimumHeight"></param>
            <returns></returns>
        </member>
        <member name="P:MateClass.CmBarcode.PrintDocument">
            <summary>
            인쇄 문서 (PrintDocument)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.Data">
            <summary>
            ComMate: 바코드 인쇄시 데이터바인딩에 사용되는 데이터
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.PrinterName">
            <summary>
            ComMate: 바코드 출력 프린트명
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.PageWidth">
            <summary>
            ComMate: 용지너비 (단위 mm)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.PageHeight">
            <summary>
            ComMate: 용지높이 (단위 mm)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.MarginLeft">
            <summary>
            ComMate: 인쇄시 좌측 여백 (단위 mm)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.MarginTop">
            <summary>
            ComMate: 인쇄시 상단 여백 (단위 mm)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.MarginRight">
            <summary>
            ComMate: 인쇄시 우측 여백 (단위 mm)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.MarginBottom">
            <summary>
            ComMate: 인쇄시 하단 여백 (단위 mm)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.Landscape">
            <summary>
            ComMate: 가로인쇄 모드
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.PageRotation">
            <summary>
            ComMate: 인쇄시 회전각도
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.ForeColor">
            <summary>
            ComMate: 글자색, 선 색상, ...
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.LineWidth">
            <summary>
            ComMate: 선 두께
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.FontName">
            <summary>
            ComMate: 폰트
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.FontBold">
            <summary>
            ComMate: 폰트 굵게
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.FontSize">
            <summary>
            ComMate: 폰트 크기(point 단위)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.ShowBarcodeCode">
            <summary>
            ComMate: 바코드 코드 보이기 여부
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.Barcode1DType">
            <summary>
            ComMate: 1차원 바코드 형식 (기본: CODE128)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.Barcode2DType">
            <summary>
            ComMate: 2차원 바코드 형식 (기본: QRCODE)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.BarcodeType">
            <summary>
            ComMate: 바코드 형식 (기본: 1차원 바코드)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.TextAlignType">
            <summary>
            ComMate: 문자열 정렬
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.WordWrap">
            <summary>
            ComMate: 자동 줄 바꿈 켜기/끄기
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.Rotation">
            <summary>
            ComMate: 회전각도
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.AspectRatio">
            <summary>
            글꼴 종횡비
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.RotationOriginType">
            <summary>
            ComMate: 중심 원점
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.RotationType">
            <summary>
            ComMate: 회전 적용 방식
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.LocationType">
            <summary>
            ComMate: 이미지 위치 (기본: Fill)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.NarrowBarcodeFactor">
            <summary>
            ComMate: 바코드 유형이 CODE128CM 일때, 가장 얇은 바의 폭 배율 지정 0.3F ~ 1.8F 까지 (기본 1.0F)
            </summary>
        </member>
        <member name="P:MateClass.CmBarcode.DrawCommandList">
            <summary>
            인쇄명령 목록
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.GeneralDrawCommand.GetRotatedPointF(System.Single,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            0점을 기준으로 해서 회전한 점 위치를 구함
            </summary>
            <param name="degrees">각도</param>
            <param name="inPointf">원래의 점 위치</param>
            <returns>0점을 기준으로 회전된 점의 위치</returns>
        </member>
        <member name="T:MateClass.CmBarcode.DrawBarcodeCmd.IPictureDispHost">
            <summary>
            Conversion thunk.
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.DrawBarcodeCmd.IPictureDispHost.#ctor">
            <summary>
            Default Constructor, required by the framework.
            </summary>
        </member>
        <member name="M:MateClass.CmBarcode.DrawBarcodeCmd.IPictureDispHost.GetIPictureDispFromPicture(System.Drawing.Image)">
            <summary>
            Convert the image to an ipicturedisp.
            </summary>
            <param name="image">The image instance</param>
            <returns>The picture dispatch object.</returns>
        </member>
        <member name="M:MateClass.CmBarcode.DrawBarcodeCmd.IPictureDispHost.GetPictureFromIPicture(System.Object)">
            <summary>
            Convert the dispatch interface into an image object.
            </summary>
            <param name="picture">The picture interface</param>
            <returns>An image instance.</returns>
        </member>
        <member name="M:BarcodeLib.Symbologies.Standard2of5.Encode_Standard2of5">
            <summary>
            Encode the raw data using the Standard 2 of 5 algorithm.
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.ITF14.Encode_ITF14">
            <summary>
            Encode the raw data using the ITF-14 algorithm.
            </summary>
        </member>
        <member name="T:BarcodeLib.Barcode">
            <summary>
            This class was designed to give developers and easy way to generate a barcode image from a string of data.
            </summary>
        </member>
        <member name="M:BarcodeLib.Barcode.#ctor">
            <summary>
            Default constructor.  Does not populate the raw data.  MUST be done via the RawData property before encoding.
            </summary>
        </member>
        <member name="M:BarcodeLib.Barcode.#ctor(System.String)">
            <summary>
            Constructor. Populates the raw data. No whitespace will be added before or after the barcode.
            </summary>
            <param name="data">String to be encoded.</param>
        </member>
        <member name="M:BarcodeLib.Barcode.Encode(BarcodeLib.TYPE,System.String,System.Int32,System.Int32)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.Encode(BarcodeLib.TYPE,System.String,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.Encode(BarcodeLib.TYPE,System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.Encode(BarcodeLib.TYPE,System.String)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.Encode(BarcodeLib.TYPE)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
        </member>
        <member name="M:BarcodeLib.Barcode.Encode">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.
            </summary>
        </member>
        <member name="M:BarcodeLib.Barcode.Generate_Image">
            <summary>
            Gets a bitmap representation of the encoded data.
            </summary>
            <returns>Bitmap of encoded value.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.GetImageData(BarcodeLib.SaveTypes)">
            <summary>
            Gets the bytes that represent the image.
            </summary>
            <param name="savetype">File type to put the data in before returning the bytes.</param>
            <returns>Bytes representing the encoded image.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.SaveImage(System.String,BarcodeLib.SaveTypes)">
            <summary>
            Saves an encoded image to a specified file and type.
            </summary>
            <param name="Filename">Filename to save to.</param>
            <param name="FileType">Format to use.</param>
        </member>
        <member name="M:BarcodeLib.Barcode.SaveImage(System.IO.Stream,BarcodeLib.SaveTypes)">
            <summary>
            Saves an encoded image to a specified stream.
            </summary>
            <param name="stream">Stream to write image to.</param>
            <param name="FileType">Format to use.</param>
        </member>
        <member name="M:BarcodeLib.Barcode.GetSizeOfImage(System.Double@,System.Double@,System.Boolean)">
            <summary>
            Returns the size of the EncodedImage in real world coordinates (millimeters or inches).
            </summary>
            <param name="Width">Width of the image in the specified coordinates.</param>
            <param name="Height">Height of the image in the specified coordinates.</param>
            <param name="Metric">Millimeters if true, otherwise Inches.</param>
            <returns></returns>
        </member>
        <member name="M:BarcodeLib.Barcode.Label_UPCA(System.Drawing.Image)">
            <summary>
            Draws Label for UPC-A barcodes (NOT COMPLETE)
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String,System.String@)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="XML">XML representation of the data and the image of the barcode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String,System.Boolean)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String,System.Boolean,System.Int32,System.Int32,System.Single)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <param name="narrowBarcodeFactor">CODE128CM 바코드 유형일때 얇은 바코드의 너비</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String,System.Boolean,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <param name="narrowBarRatio">얇은 바코드의 너비 비율</param>
            <param name="thickBarRatio">두꺼운 바코드의 너비 비율</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String,System.Boolean,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:BarcodeLib.Barcode.DoEncode(BarcodeLib.TYPE,System.String,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.String@)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <param name="XML">XML representation of the data and the image of the barcode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="P:BarcodeLib.Barcode.NarrowBarcodeFactor">
            <summary>
            바코드 유형이 CODE128CM 일때, 가장 얇은 바의 폭 배율 지정 0.3F ~ 1.8F 까지 (기본 1.0F)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.NarrowBarRatio">
            <summary>
            일반적인 바코드의 얇은 바의 폭 비율 (기본 1.0F)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.ThickBarRatio">
            <summary>
            일반적인 바코드의 두꺼운 바의 폭 비율 (기본 1.0F)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.RawData">
            <summary>
            Gets or sets the raw data to encode.
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.EncodedValue">
            <summary>
            Gets the encoded value.
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.Country_Assigning_Manufacturer_Code">
            <summary>
            Gets the Country that assigned the Manufacturer Code.
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.EncodedType">
            <summary>
            Gets or sets the Encoded Type (ex. UPC-A, EAN-13 ... etc)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.EncodedImage">
            <summary>
            Gets the Image of the generated barcode.
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.ForeColor">
            <summary>
            Gets or sets the color of the bars. (Default is black)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.BackColor">
            <summary>
            Gets or sets the background color. (Default is white)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.LabelFont">
            <summary>
            Gets or sets the label font. (Default is Microsoft Sans Serif, 10pt, Bold)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.LabelPosition">
            <summary>
            Gets or sets the location of the label in relation to the barcode. (BOTTOMCENTER is default)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.RotateFlipType">
            <summary>
            Gets or sets the degree in which to rotate/flip the image.(No action is default)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.Width">
            <summary>
            Gets or sets the width of the image to be drawn. (Default is 300 pixels)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.Height">
            <summary>
            Gets or sets the height of the image to be drawn. (Default is 150 pixels)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.IncludeLabel">
            <summary>
            Gets or sets whether a label should be drawn below the image.
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.EncodingTime">
            <summary>
            Gets or sets the amount of time in milliseconds that it took to encode and draw the barcode.
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.XML">
            <summary>
            Gets the XML representation of the Barcode data and image.
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.ImageFormat">
            <summary>
            Gets or sets the image format to use when encoding and returning images. (Jpeg is default)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.Errors">
            <summary>
            Gets the list of errors encountered.
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.Alignment">
            <summary>
            Gets or sets the alignment of the barcode inside the image. (Not for Postnet or ITF-14)
            </summary>
        </member>
        <member name="P:BarcodeLib.Barcode.Version">
            <summary>
            Gets the assembly version information.
            </summary>
        </member>
        <member name="T:MateClass.SqlQuery">
            <summary>
            ComMate: 웹서비스를 통한 데이터베이스 쿼리문 전송
            </summary>
        </member>
        <member name="M:MateClass.SqlQuery.ExecuteDataset(System.String)">
            <summary>
            ComMate: 쿼리 결과를 DataSet 으로 받기
            </summary>
            <param name="queryString">쿼리문자열 ( 프로시저 호출 포함 )</param>
            <returns>쿼리 결과 DataSet</returns>
        </member>
        <member name="M:MateClass.SqlQuery.ExecuteNonQuery(System.String)">
            <summary>
            ComMate: 변경된 행 Count만 리턴하는 쿼리문 날리기
            </summary>
        </member>
        <member name="M:MateClass.SqlQuery.ExecuteScalar(System.String)">
            <summary>
            ComMate: 단일 리턴을 얻기 위한 쿼리문 날리기
            </summary>
        </member>
        <member name="M:BarcodeLib.Symbologies.UPCA.Encode_UPCA">
            <summary>
            Encode the raw data using the UPC-A algorithm.
            </summary>
        </member>
    </members>
</doc>
